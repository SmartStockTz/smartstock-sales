import { ɵɵdefineInjectable, Injectable, ɵɵinject, Component, Input, EventEmitter, Output, Inject, Pipe, NgModule } from '@angular/core';
import { of } from 'rxjs';
import { __awaiter } from 'tslib';
import { MatDialogRef, MatDialog, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';
import { HttpClient } from '@angular/common/http';
import { BFast } from 'bfastjs';
import { v4 } from 'uuid';
import { Router, RouterModule } from '@angular/router';
import { FormControl, Validators, ReactiveFormsModule } from '@angular/forms';
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatDividerModule } from '@angular/material/divider';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatIconModule } from '@angular/material/icon';
import { MatListModule } from '@angular/material/list';
import { MatMenuModule } from '@angular/material/menu';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatSelectModule } from '@angular/material/select';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatBadgeModule } from '@angular/material/badge';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatRippleModule } from '@angular/material/core';
import { CommonModule } from '@angular/common';
import { MatSnackBar } from '@angular/material/snack-bar';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common/http';
import * as ɵngcc2 from '@angular/material/dialog';
import * as ɵngcc3 from '@angular/material/button';
import * as ɵngcc4 from '@angular/material/icon';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@angular/router';
import * as ɵngcc7 from '@angular/material/divider';
import * as ɵngcc8 from '@angular/material/expansion';
import * as ɵngcc9 from '@angular/material/list';
import * as ɵngcc10 from '@angular/material/form-field';
import * as ɵngcc11 from '@angular/material/core';
import * as ɵngcc12 from '@angular/material/toolbar';
import * as ɵngcc13 from '@angular/material/menu';
import * as ɵngcc14 from '@angular/material/badge';
import * as ɵngcc15 from '@angular/material/card';
import * as ɵngcc16 from '@angular/material/tooltip';
import * as ɵngcc17 from '@angular/material/progress-spinner';
import * as ɵngcc18 from '@angular/forms';
import * as ɵngcc19 from '@angular/material/progress-bar';
import * as ɵngcc20 from '@angular/material/snack-bar';

function DrawerComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 25);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.shop.businessName);
} }
const _c0 = function () { return {}; };
function DrawerComponent_mat_nav_list_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-nav-list", 26);
    ɵngcc0.ɵɵelementStart(1, "mat-list-item", 27);
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 13);
    ɵngcc0.ɵɵtext(3, "dashboard");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 14);
    ɵngcc0.ɵɵtext(5, "Dashboard");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r1.shouldExpand("dashboard") ? ctx_r1.selectedMenu : ɵngcc0.ɵɵpureFunction0(1, _c0));
} }
function DrawerComponent_mat_divider_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function DrawerComponent_mat_expansion_panel_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-expansion-panel", 15);
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel-header");
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 16);
    ɵngcc0.ɵɵtext(3, "table_chart");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 17);
    ɵngcc0.ɵɵtext(5, "Reports");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "mat-nav-list");
    ɵngcc0.ɵɵelementStart(7, "a", 28);
    ɵngcc0.ɵɵtext(8, "Sales Reports");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "a", 29);
    ɵngcc0.ɵɵtext(10, "Stock Reports");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("expanded", ctx_r3.shouldExpand("report"));
} }
function DrawerComponent_mat_divider_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
const _c1 = function () { return { t: 3 }; };
function DrawerComponent_mat_expansion_panel_24_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-expansion-panel", 15);
    ɵngcc0.ɵɵelementStart(1, "mat-expansion-panel-header");
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 16);
    ɵngcc0.ɵɵtext(3, "receipts");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 17);
    ɵngcc0.ɵɵtext(5, "Purchase");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "mat-nav-list");
    ɵngcc0.ɵɵelementStart(7, "a", 30);
    ɵngcc0.ɵɵtext(8, "All Purchases");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "a", 31);
    ɵngcc0.ɵɵtext(10, "New Purchase");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "a", 32);
    ɵngcc0.ɵɵtext(12, "Suppliers");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("expanded", ctx_r5.shouldExpand("purchase"));
    ɵngcc0.ɵɵadvance(11);
    ɵngcc0.ɵɵproperty("queryParams", ɵngcc0.ɵɵpureFunction0(2, _c1));
} }
function DrawerComponent_mat_divider_25_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function DrawerComponent_mat_nav_list_26_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-nav-list");
    ɵngcc0.ɵɵelementStart(1, "mat-list-item", 33);
    ɵngcc0.ɵɵelementStart(2, "mat-icon", 13);
    ɵngcc0.ɵɵtext(3, "store");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 14);
    ɵngcc0.ɵɵtext(5, "Stock");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r7.shouldExpand("stock") ? ctx_r7.selectedMenu : ɵngcc0.ɵɵpureFunction0(1, _c0));
} }
function DrawerComponent_mat_divider_27_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-divider");
} }
function DrawerComponent_a_35_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 34);
    ɵngcc0.ɵɵelementStart(1, "div", 21);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3, "Settings");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span", 22);
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "settings");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DrawerComponent_a_36_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 35);
    ɵngcc0.ɵɵelementStart(1, "div", 21);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3, "Users");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span", 22);
    ɵngcc0.ɵɵelementStart(5, "mat-icon");
    ɵngcc0.ɵɵtext(6, "person_add");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ToolbarComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 12);
} }
function ToolbarComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 13);
} }
function ToolbarComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 12);
} }
function ToolbarComponent_smartstock_search_input_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "smartstock-search-input", 14);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("searchProgressFlag", ctx_r3.searchProgressFlag)("showSearch", ctx_r3.showSearch)("searchInputControl", ctx_r3.searchInputControl)("searchPlaceholder", ctx_r3.searchPlaceholder);
} }
function ToolbarComponent_span_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 13);
} }
function ToolbarComponent_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵlistener("click", function ToolbarComponent_button_12_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.cartdrawer.toggle(); });
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "shopping_cart");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("matBadge", ctx_r5.noOfProductsInCart);
} }
function ToolbarComponent_button_13_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(" " + ctx_r12.currentUser.username);
} }
function ToolbarComponent_button_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "account_circle");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, ToolbarComponent_button_13_span_3_Template, 2, 1, "span", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    const _r8 = ɵngcc0.ɵɵreference(16);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r8);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.currentUser);
} }
function ToolbarComponent_button_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "more_vert");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r8 = ɵngcc0.ɵɵreference(16);
    ɵngcc0.ɵɵproperty("matMenuTriggerFor", _r8);
} }
function ToolbarComponent_mat_toolbar_row_25_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "mat-toolbar-row");
    ɵngcc0.ɵɵelement(1, "smartstock-search-input", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("searchProgressFlag", ctx_r9.searchProgressFlag)("showSearch", ctx_r9.showSearch)("searchInputControl", ctx_r9.searchInputControl)("searchPlaceholder", ctx_r9.searchPlaceholder);
} }
function OnFetchComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelement(1, "img", 2);
    ɵngcc0.ɵɵelementStart(2, "h4");
    ɵngcc0.ɵɵtext(3, "No Data");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "button", 3);
    ɵngcc0.ɵɵlistener("click", function OnFetchComponent_div_0_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.callBack(); });
    ɵngcc0.ɵɵelementStart(5, "mat-icon", 4);
    ɵngcc0.ɵɵtext(6, " refresh ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function OnFetchComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelement(1, "img", 5);
    ɵngcc0.ɵɵelementStart(2, "h4");
    ɵngcc0.ɵɵtext(3, "Fetching data...");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "mat-progress-spinner", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("diameter", 30);
} }
function SearchInputComponent_input_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 3);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx_r0.searchPlaceholder);
    ɵngcc0.ɵɵproperty("formControl", ctx_r0.searchInputControl);
} }
function SearchInputComponent_mat_progress_spinner_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "mat-progress-spinner", 4);
} }
function BottomBarComponent_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 13);
    ɵngcc0.ɵɵtext(2, "dashboard");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("color", ctx_r0.activeNav("dashboard") ? "primary" : "");
} }
function BottomBarComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "dashboard");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function BottomBarComponent_button_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 13);
    ɵngcc0.ɵɵtext(2, "shop");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("color", ctx_r2.activeNav("sale") ? "primary" : "");
} }
function BottomBarComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "shop");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function BottomBarComponent_button_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 13);
    ɵngcc0.ɵɵtext(2, "receipt");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("color", ctx_r4.activeNav("purchase") ? "primary" : "");
} }
function BottomBarComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "receipt");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function BottomBarComponent_button_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 13);
    ɵngcc0.ɵɵtext(2, "store");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("color", ctx_r6.activeNav("stock") ? "primary" : "");
} }
function BottomBarComponent_button_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 20);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "store");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function BottomBarComponent_button_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵelementStart(1, "mat-icon", 13);
    ɵngcc0.ɵɵtext(2, "settings");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("color", ctx_r8.activeNav("settings") ? "primary" : "");
} }
function BottomBarComponent_button_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 22);
    ɵngcc0.ɵɵelementStart(1, "mat-icon");
    ɵngcc0.ɵɵtext(2, "settings");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DataNotReadyComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelement(1, "img", 3);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3, "Data is not ready yet");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("width", ctx_r0.width);
    ɵngcc0.ɵɵpropertyInterpolate("height", ctx_r0.height);
} }
function DataNotReadyComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelement(1, "mat-progress-spinner", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("diameter", 30);
} }
function UploadFilesComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "mat-card", 6);
    ɵngcc0.ɵɵelementStart(2, "span", 7);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span", 8);
    ɵngcc0.ɵɵelementStart(5, "button", 9);
    ɵngcc0.ɵɵlistener("click", function UploadFilesComponent_div_1_Template_button_click_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.removeFile($event, i_r3); });
    ɵngcc0.ɵɵelementStart(6, "mat-icon", 10);
    ɵngcc0.ɵɵtext(7, "delete");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const file_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", file_r2.name, " ");
} }
function DashCardComponent_hr_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "hr", 8);
} }
function DashCardComponent_mat_card_actions_10_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card-actions", 9);
    ɵngcc0.ɵɵelement(1, "span", 10);
    ɵngcc0.ɵɵelementStart(2, "button", 11);
    ɵngcc0.ɵɵlistener("click", function DashCardComponent_mat_card_actions_10_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.goTo(); });
    ɵngcc0.ɵɵtext(3, " EXPLORE REPORT ");
    ɵngcc0.ɵɵelementStart(4, "mat-icon", 12);
    ɵngcc0.ɵɵtext(5, "arrow_forward");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
const _c2 = function (a0) { return { height: a0 }; };
function UploadFileProgressComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "mat-progress-bar", 1);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("bufferValue", 100)("value", ctx_r0.uploadPercentage);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2("", ctx_r0.name, " ", ctx_r0.uploadPercentage, "%");
} }
class EventService {
    constructor() {
    }
    broadcast(eventName, data) {
        const cE = new CustomEvent(eventName, {
            detail: data
        });
        window.dispatchEvent(cE);
    }
    listen(eventName, handler) {
        window.addEventListener(eventName, handler);
    }
    unListen(eventName, handler) {
        window.removeEventListener(eventName, handler);
    }
}
EventService.ɵfac = function EventService_Factory(t) { return new (t || EventService)(); };
EventService.ɵprov = ɵɵdefineInjectable({ factory: function EventService_Factory() { return new EventService(); }, token: EventService, providedIn: "root" });
EventService.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EventService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

class LogService {
    constructor() {
    }
    i(message, tag, debug = false) {
        if (debug) {
            console.log(tag, message);
        }
    }
    e(message, tag, debug = false) {
        if (debug) {
            console.error(tag, message);
        }
    }
    w(message, tag, debug = false) {
        if (debug) {
            console.warn(tag, message);
        }
    }
}
LogService.ɵfac = function LogService_Factory(t) { return new (t || LogService)(); };
LogService.ɵprov = ɵɵdefineInjectable({ factory: function LogService_Factory() { return new LogService(); }, token: LogService, providedIn: "root" });
LogService.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LogService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

class SecurityUtil {
    static generateUUID() {
        return v4();
    }
    static randomString(length) {
        let result = '';
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        const charactersLength = characters.length;
        for (let i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
    }
}

const SsmEvents = {
    ACTIVE_SHOP_SET: '_ssm_active_shop_set_',
    ACTIVE_SHOP_REMOVE: '_ssm_active_shop_removed_',
    SETTINGS_UPDATED: '_ssm_settings_updated_',
    STOCK_UPDATED: '_ssm_stock_updated_',
    ADD_CART: 'add_cart',
    NO_OF_CART: 'noofProductsCart',
    CART_ITEMS: '_cart_items_'
};

class StorageService {
    constructor(eventApi) {
        this.eventApi = eventApi;
        this.smartStockCache = BFast.cache({ database: 'smartstock', collection: 'config' });
    }
    getActiveUser() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield BFast.auth().currentUser();
        });
    }
    saveSales(batchs) {
        return __awaiter(this, void 0, void 0, function* () {
            const activeShop = yield this.getActiveShop();
            yield BFast.cache({ database: 'sales', collection: activeShop.projectId })
                .set(SecurityUtil.randomString(12), batchs, {
                dtl: 720
            });
        });
    }
    getActiveShop() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.smartStockCache.get('activeShop');
            if (response) {
                return response;
            }
            else {
                throw { message: 'No Active Shop' };
            }
        });
    }
    saveActiveShop(shop) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.smartStockCache.set('activeShop', shop, {
                dtl: 7
            });
            this.eventApi.broadcast(SsmEvents.ACTIVE_SHOP_SET);
            return response;
        });
    }
    getCurrentProjectId() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.smartStockCache.get('cPID');
        });
    }
    saveCurrentProjectId(projectId) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.smartStockCache.set('cPID', projectId, {
                dtl: 7
            });
        });
    }
    clearSmartStockCache() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.smartStockCache.clearAll();
        });
    }
    saveActiveUser(user) {
        return __awaiter(this, void 0, void 0, function* () {
            return BFast.auth().setCurrentUser(user, 6);
        });
    }
    removeActiveShop() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.smartStockCache.set('activeShop', undefined);
            this.eventApi.broadcast(SsmEvents.ACTIVE_SHOP_REMOVE);
            return response;
        });
    }
    removeActiveUser() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield BFast.auth().setCurrentUser(undefined, 0);
        });
    }
    removeStocks() {
        return __awaiter(this, void 0, void 0, function* () {
            const shop = yield this.getActiveShop();
            return yield BFast.cache({ database: 'stocks', collection: shop.projectId }).clearAll();
        });
    }
    getStocks() {
        return __awaiter(this, void 0, void 0, function* () {
            const shop = yield this.getActiveShop();
            const stocksCache = BFast.cache({ database: 'stocks', collection: shop.projectId });
            return yield stocksCache.get('all');
        });
    }
    saveStocks(stocks) {
        return __awaiter(this, void 0, void 0, function* () {
            const shop = yield this.getActiveShop();
            const stocksCache = BFast.cache({ database: 'stocks', collection: shop.projectId });
            return yield stocksCache.set('all', stocks, {
                dtl: 360
            });
        });
    }
    saveStock(stock) {
        return __awaiter(this, void 0, void 0, function* () {
            // const shop = await this.getActiveShop();
            // const stocksCache = BFast.cache({database: 'stocks', collection: shop.projectId});
            // return stocksCache.set(stock.id, stock);
            return undefined;
        });
    }
    getCustomers() {
        return __awaiter(this, void 0, void 0, function* () {
            const shop = yield this.getActiveShop();
            const customersCache = BFast.cache({ database: 'customers', collection: shop.projectId });
            const customersKey = yield customersCache.keys();
            const customers = [];
            for (const key of customersKey) {
                customers.push(yield customersCache.get(key));
            }
            return customers;
        });
    }
    saveCustomer(customer) {
        return __awaiter(this, void 0, void 0, function* () {
            const shop = yield this.getActiveShop();
            const customersCache = BFast.cache({ database: 'customers', collection: shop.projectId });
            return yield customersCache.set(customer.displayName, customer, {
                dtl: 360
            });
        });
    }
}
StorageService.ɵfac = function StorageService_Factory(t) { return new (t || StorageService)(ɵngcc0.ɵɵinject(EventService)); };
StorageService.ɵprov = ɵɵdefineInjectable({ factory: function StorageService_Factory() { return new StorageService(ɵɵinject(EventService)); }, token: StorageService, providedIn: "root" });
StorageService.ctorParameters = () => [
    { type: EventService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StorageService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: EventService }]; }, null); })();

class SettingsService {
    constructor(httpClient, storageService, indexDb) {
        this.httpClient = httpClient;
        this.storageService = storageService;
        this.indexDb = indexDb;
        this.ssmServerURL = 'https://smartstock-daas.bfast.fahamutech.com'; // environment.smartstock.databaseURL;
        this.ssmFunctionsURL = 'https://smartstock-faas.bfast.fahamutech.com'; // environment.smartstock.functionsURL;
        this.ssmHeader = {
            'X-Parse-Application-Id': 'smartstock'
        };
        this.ssmFunctionsHeader = {
            'bfast-application-id': 'smartstock',
            'content-type': 'application/json'
        };
    }
    getSSMUserHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const user = yield this.storageService.getActiveUser();
                const activeShop = yield this.storageService.getActiveShop();
                if (!user) {
                    // console.log('no user records found');
                    throw new Error('no user records found');
                }
                if (user && user.sessionToken && activeShop && activeShop.applicationId) {
                    return {
                        'X-Parse-Application-Id': 'smartstock',
                        'X-Parse-Session-Token': user.sessionToken,
                        'Content-Type': 'application/json'
                    };
                }
                else {
                    throw new Error('token not found');
                }
            }
            catch (e) {
                throw { message: 'Fails to get user, so to retrieve token' };
            }
        });
    }
    getCustomerApplicationId() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const activeShop = yield this.storageService.getActiveShop();
                if (!activeShop) {
                    throw new Error('No user record');
                }
                return activeShop.applicationId;
            }
            catch (e) {
                throw { message: 'Fails to get application id', reason: e.toString() };
            }
        });
    }
    getCustomerServerURLId() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const activeShop = yield this.storageService.getActiveShop();
                if (!activeShop) {
                    throw new Error('No user in local storage');
                }
                return activeShop.projectUrlId;
            }
            catch (reason) {
                throw { message: 'Fails to get user', reason: reason.toString() };
            }
        });
    }
    getCustomerHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return {
                    'X-Parse-Application-Id': yield this.getCustomerApplicationId()
                };
            }
            catch (e) {
                console.warn(e);
                return {};
            }
        });
    }
    getCustomerPostHeader(contentType) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return {
                    'X-Parse-Application-Id': yield this.getCustomerApplicationId(),
                    'content-type': contentType ? contentType : 'application/json'
                };
            }
            catch (e) {
                throw { message: 'Fails to get customer post header', reason: e.toString() };
            }
        });
    }
    getCustomerServerURL() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return `https://${yield this.getCustomerServerURLId()}.bfast.fahamutech.com`;
            }
            catch (e) {
                throw { message: 'Fails to get server url', reason: e.toString() };
            }
        });
    }
    getCustomerProjectId() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const activeShop = yield this.indexDb.getActiveShop();
                if (!activeShop) {
                    throw new Error('No user in local storage');
                }
                return activeShop.projectId;
            }
            catch (e) {
                throw { message: 'Fails to get project id', reason: e.toString() };
            }
        });
    }
    /**
     * @deprecated
     */
    getPrinterAddress(callback) {
        // this.indexDb.getItem<{ ip: string, name: string }>('printerAddress').then(value => {
        //   callback(null);
        // }).catch(reason => {
        //   console.log(reason);
        //   callback(null);
        // });
        callback(null);
    }
    saveSettings(settings) {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            try {
                const activeShop = yield this.storageService.getActiveShop();
                this.httpClient.put(this.ssmFunctionsURL + '/settings/' + activeShop.projectId, settings, {
                    headers: this.ssmFunctionsHeader
                }).subscribe(_ => {
                    activeShop.settings = _.settings;
                    this.storageService.saveActiveShop(activeShop).then(_1 => {
                        resolve('Shop settings updated');
                    }).catch(reason => {
                        reject(reason);
                    });
                }, error => {
                    reject(error);
                });
            }
            catch (e) {
                reject(e);
            }
        }));
    }
    getSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const activeShop = yield this.storageService.getActiveShop();
                if (!activeShop || !activeShop.settings) {
                    return {
                        printerFooter: 'Thank you',
                        printerHeader: '',
                        saleWithoutPrinter: true,
                        allowRetail: true,
                        allowWholesale: true,
                    };
                }
                return activeShop.settings;
            }
            catch (e) {
                throw { message: 'Fails to get settings', reason: e.toString() };
            }
        });
    }
}
SettingsService.ɵfac = function SettingsService_Factory(t) { return new (t || SettingsService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(StorageService), ɵngcc0.ɵɵinject(StorageService)); };
SettingsService.ɵprov = ɵɵdefineInjectable({ factory: function SettingsService_Factory() { return new SettingsService(ɵɵinject(HttpClient), ɵɵinject(StorageService), ɵɵinject(StorageService)); }, token: SettingsService, providedIn: "root" });
SettingsService.ctorParameters = () => [
    { type: HttpClient },
    { type: StorageService },
    { type: StorageService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SettingsService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: StorageService }, { type: StorageService }]; }, null); })();

class VerifyEMailDialogComponent {
    constructor(dialogRef) {
        this.dialogRef = dialogRef;
    }
}
VerifyEMailDialogComponent.ɵfac = function VerifyEMailDialogComponent_Factory(t) { return new (t || VerifyEMailDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef)); };
VerifyEMailDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VerifyEMailDialogComponent, selectors: [["ng-component"]], decls: 11, vars: 0, consts: [["mat-dialog-title", ""], ["mat-dialog-content", ""], ["mat-dialog-actions", ""], ["mat-button", "", "color", "primary", 3, "click"]], template: function VerifyEMailDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtext(2, "Account Verification");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵelementStart(4, "p");
        ɵngcc0.ɵɵtext(5, " Your email is not verified we send a link to the email ");
        ɵngcc0.ɵɵelement(6, "br");
        ɵngcc0.ɵɵtext(7, " you use when open account for you to verify your account ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 2);
        ɵngcc0.ɵɵelementStart(9, "button", 3);
        ɵngcc0.ɵɵlistener("click", function VerifyEMailDialogComponent_Template_button_click_9_listener() { return ctx.dialogRef.close(); });
        ɵngcc0.ɵɵtext(10, "Close");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } }, directives: [ɵngcc2.MatDialogTitle, ɵngcc2.MatDialogContent, ɵngcc2.MatDialogActions, ɵngcc3.MatButton], encapsulation: 2 });
VerifyEMailDialogComponent.ctorParameters = () => [
    { type: MatDialogRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VerifyEMailDialogComponent, [{
        type: Component,
        args: [{
                template: `
    <div>
      <div mat-dialog-title>Account Verification</div>
      <div mat-dialog-content>
        <p>
          Your email is not verified we send a link to the email
          <br>
          you use when open account for you to verify your account
        </p>
      </div>
      <div mat-dialog-actions>
        <button (click)="dialogRef.close()" mat-button color="primary">Close</button>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc2.MatDialogRef }]; }, null); })();

class UserService {
    constructor(httpClient, settingsService, dialog, logger, storageService) {
        this.httpClient = httpClient;
        this.settingsService = settingsService;
        this.dialog = dialog;
        this.logger = logger;
        this.storageService = storageService;
    }
    currentUser() {
        return __awaiter(this, void 0, void 0, function* () {
            const user = yield BFast.auth().currentUser();
            if (user && user.role !== 'admin') {
                return user;
            }
            else if (user && user.verified === true) {
                return user;
            }
            else {
                return yield BFast.auth().setCurrentUser(undefined);
            }
        });
    }
    deleteUser(user) {
        return __awaiter(this, void 0, void 0, function* () {
            return BFast.functions()
                .request('/functions/users/' + user.id)
                .delete({
                data: { context: { admin: yield BFast.auth().currentUser() } }
            });
        });
    }
    getAllUser(pagination) {
        return __awaiter(this, void 0, void 0, function* () {
            const projectId = yield this.settingsService.getCustomerProjectId();
            return BFast.database().collection('_User')
                .query()
                .equalTo('projectId', projectId)
                .includesIn('role', ['user', 'manager'])
                .size(pagination.size)
                .skip(pagination.skip)
                .find({
                useMasterKey: true
            });
        });
    }
    getUser(user, callback) {
    }
    login(user) {
        return __awaiter(this, void 0, void 0, function* () {
            const authUser = yield BFast.auth().logIn(user.username, user.password);
            yield this.storageService.removeActiveShop();
            if (authUser && authUser.role !== 'admin') {
                yield this.storageService.saveActiveUser(authUser);
                return authUser;
            }
            else if (authUser && authUser.verified === true) {
                yield this.storageService.saveActiveUser(authUser);
                return authUser;
            }
            else {
                yield BFast.functions().request('/functions/users/reVerifyAccount/' + user.username).post();
                this.dialog.open(VerifyEMailDialogComponent, {
                    closeOnNavigation: true,
                    disableClose: true
                });
                throw { code: 403, err: 'account not verified' };
            }
        });
    }
    logout(user) {
        return __awaiter(this, void 0, void 0, function* () {
            yield BFast.auth().logOut();
            yield this.storageService.removeActiveUser();
            yield this.storageService.removeActiveShop();
            return;
        });
    }
    register(user) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                user.settings = {
                    printerFooter: 'Thank you',
                    printerHeader: '',
                    saleWithoutPrinter: true,
                    allowRetail: true,
                    allowWholesale: true
                };
                user.shops = [];
                yield this.storageService.removeActiveShop();
                return yield BFast.functions().request('/functions/users/create').post(user, {
                    headers: this.settingsService.ssmFunctionsHeader
                });
            }
            catch (e) {
                if (e && e.response && e.response.data) {
                    throw e.response.data;
                }
                else {
                    throw e.toString();
                }
            }
        });
    }
    resetPassword(username) {
        return BFast.functions().request('/functions/users/resetPassword/' + encodeURIComponent(username)).get();
    }
    refreshToken() {
        return __awaiter(this, void 0, void 0, function* () {
            return BFast.auth().currentUser();
        });
    }
    addUser(user) {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            const shop = yield this.storageService.getActiveShop();
            const shops = user.shops ? user.shops : [];
            const shops1 = shops.filter(value => value.applicationId !== shop.applicationId);
            user.applicationId = shop.applicationId;
            user.projectUrlId = shop.projectUrlId;
            user.projectId = shop.projectId;
            user.businessName = shop.businessName;
            user.settings = shop.settings;
            user.shops = shops1;
            this.httpClient.post(this.settingsService.ssmFunctionsURL + '/functions/users/seller', user, {
                headers: this.settingsService.ssmFunctionsHeader
            }).subscribe(value => {
                resolve(value);
            }, error => {
                reject(error);
            });
        }));
    }
    getShops() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const user = yield this.storageService.getActiveUser();
                const shops = [];
                user.shops.forEach(element => {
                    shops.push(element);
                });
                shops.push({
                    businessName: user.businessName,
                    projectId: user.projectId,
                    applicationId: user.applicationId,
                    projectUrlId: user.projectUrlId,
                    settings: user.settings,
                    street: user.street,
                    country: user.country,
                    region: user.region
                });
                return shops;
            }
            catch (e) {
                throw e;
            }
        });
    }
    getCurrentShop() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const activeShop = yield this.storageService.getActiveShop();
                if (activeShop && activeShop.projectId && activeShop.applicationId && activeShop.projectUrlId) {
                    return activeShop;
                }
                else {
                    throw new Error('No active shop in records');
                }
            }
            catch (e) {
                throw e;
            }
        });
    }
    saveCurrentShop(shop) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.storageService.saveCurrentProjectId(shop.projectId);
                return yield this.storageService.saveActiveShop(shop);
            }
            catch (e) {
                throw e;
            }
        });
    }
    createShop(data) {
        return undefined;
        // return new Promise<ShopModel>(async (resolve, reject) => {
        //   this.httpClient.post<ShopModel>(this.settings.ssmFunctionsURL + '/functions/shop', data, {
        //     headers: this.settings.ssmFunctionsHeader
        //   }).subscribe(value => {
        //     resolve(value);
        //   }, error => {
        //     reject(error);
        //   });
        // });
    }
    deleteShop(shop) {
        return undefined;
        // return new Promise<ShopModel>((resolve, reject) => {
        //   this.httpClient.delete(this.settings.ssmFunctionsURL + '/functions/shop', {
        //   })
        // });
    }
    updatePassword(user, password) {
        return new Promise((resolve, reject) => {
            this.httpClient.put(this.settingsService.ssmFunctionsURL + '/functions/users/password/' + user.id, {
                password: password
            }, {
                headers: this.settingsService.ssmFunctionsHeader
            }).subscribe(value => {
                resolve(value);
            }, error => {
                reject(error);
            });
        });
    }
    updateUser(user, data) {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            this.httpClient.put(this.settingsService.ssmFunctionsURL + '/functions/users/' + user.id, data, {
                headers: this.settingsService.ssmFunctionsHeader
            }).subscribe(value => resolve(value), error1 => {
                reject(error1);
            });
        }));
    }
    updateCurrentUser(user) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield this.storageService.saveActiveUser(user);
            }
            catch (e) {
                throw e;
            }
        });
    }
    changePasswordFromOld(data) {
        return new Promise((resolve, reject) => {
            this.httpClient.put(this.settingsService.ssmFunctionsURL + '/functions/users/password/change/' + data.user.id, {
                lastPassword: data.lastPassword,
                username: data.user.username,
                password: data.password
            }, {
                headers: this.settingsService.ssmFunctionsHeader
            }).subscribe(value => resolve(value), error1 => {
                reject(error1);
            });
        });
    }
}
UserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(SettingsService), ɵngcc0.ɵɵinject(ɵngcc2.MatDialog), ɵngcc0.ɵɵinject(LogService), ɵngcc0.ɵɵinject(StorageService)); };
UserService.ɵprov = ɵɵdefineInjectable({ factory: function UserService_Factory() { return new UserService(ɵɵinject(HttpClient), ɵɵinject(SettingsService), ɵɵinject(MatDialog), ɵɵinject(LogService), ɵɵinject(StorageService)); }, token: UserService, providedIn: "root" });
UserService.ctorParameters = () => [
    { type: HttpClient },
    { type: SettingsService },
    { type: MatDialog },
    { type: LogService },
    { type: StorageService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UserService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: SettingsService }, { type: ɵngcc2.MatDialog }, { type: LogService }, { type: StorageService }]; }, null); })();

class ConfigsService {
}
ConfigsService.ɵfac = function ConfigsService_Factory(t) { return new (t || ConfigsService)(); };
ConfigsService.versionName = '';
ConfigsService.ɵprov = ɵɵdefineInjectable({ factory: function ConfigsService_Factory() { return new ConfigsService(); }, token: ConfigsService, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfigsService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();

class DrawerComponent {
    constructor(userService, logger, eventApi) {
        this.userService = userService;
        this.logger = logger;
        this.eventApi = eventApi;
        this.versionNumber = of();
        this.selectedMenu = {
            background: '#1b5e20',
            borderTopRightRadius: '50px',
            borderBottomRightRadius: '50px',
            color: 'white'
        };
    }
    ngOnInit() {
        this.versionNumber = of(ConfigsService.versionName);
        this.userService.getCurrentShop().then(shop => {
            this.shop = shop;
        }).catch(reason => {
            this.logger.i(reason);
            this.shop = undefined;
        });
        this.userService.currentUser().then(user => {
            this.currentUser = user;
        });
        this.eventApi.listen(SsmEvents.SETTINGS_UPDATED, data => {
            this.userService.getCurrentShop().then(shop => {
                this.shop = shop;
            }).catch(reason => {
                this.logger.e(reason, 'AdminDrawerComponent:37');
                this.shop = undefined;
            });
        });
    }
    shouldExpand(route) {
        const url = new URL(location.href);
        return url.pathname.startsWith('/' + route);
    }
    isManager() {
        return this.currentUser && (this.currentUser.role === 'admin' || this.currentUser.role === 'manager');
    }
    isAdmin() {
        return this.currentUser && (this.currentUser.role === 'admin');
    }
}
DrawerComponent.ɵfac = function DrawerComponent_Factory(t) { return new (t || DrawerComponent)(ɵngcc0.ɵɵdirectiveInject(UserService), ɵngcc0.ɵɵdirectiveInject(LogService), ɵngcc0.ɵɵdirectiveInject(EventService)); };
DrawerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DrawerComponent, selectors: [["smartstock-drawer"]], inputs: { versionNumber: "versionNumber" }, decls: 49, vars: 18, consts: [[1, "my-side-nav"], [1, "d-flex", "justify-content-center", "align-items-center", "flex-column", 2, "padding-bottom", "8px"], [2, "padding", "16px", "justify-content", "center", "align-items", "center"], ["color", "primary", 2, "width", "70px", "height", "70px", "font-size", "70px"], ["style", "max-width: 150px; overflow: hidden; text-overflow: ellipsis;", 4, "ngIf"], [2, "width", "4px", "height", "4px"], ["color", "primary", "routerLink", "/account/shop", "mat-button", "", 1, "btn-block", 2, "width", "80%"], [1, "d-flex", "justify-content-center", "align-items-center"], [1, "mat-elevation-z0", 3, "multi"], ["class", "mat-elevation-z0", 4, "ngIf"], [4, "ngIf"], ["class", "mat-elevation-z0", 3, "expanded", 4, "ngIf"], ["routerLink", "/sale", 3, "ngStyle"], ["matListIcon", "", "matPrefix", ""], ["matLine", "", 2, "margin-left", "8px"], [1, "mat-elevation-z0", 3, "expanded"], ["matPrefix", ""], [2, "margin-left", "8px"], ["mat-list-item", "", "routerLink", "/account/settings", 4, "ngIf"], ["mat-list-item", "", "routerLink", "/account/users", 4, "ngIf"], ["mat-list-item", "", "routerLink", "/account/profile"], [1, "d-flex", "flex-row", "flex-nowrap", "btn-block"], [1, "flex-grow-1"], [2, "flex-grow", "1"], [2, "display", "flex", "justify-content", "center", "align-items", "center"], [2, "max-width", "150px", "overflow", "hidden", "text-overflow", "ellipsis"], [1, "mat-elevation-z0"], ["routerLink", "/dashboard", 3, "ngStyle"], ["mat-list-item", "", "routerLink", "/report/sales"], ["mat-list-item", "", "routerLink", "/report/stocks"], ["mat-list-item", "", "routerLink", "/purchase"], ["mat-list-item", "", "routerLink", "/purchase/create"], ["mat-list-item", "", "routerLink", "/stock", 3, "queryParams"], ["routerLink", "/stock", 3, "ngStyle"], ["mat-list-item", "", "routerLink", "/account/settings"], ["mat-list-item", "", "routerLink", "/account/users"]], template: function DrawerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "mat-icon", 3);
        ɵngcc0.ɵɵtext(5, "store");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, DrawerComponent_span_6_Template, 2, 1, "span", 4);
        ɵngcc0.ɵɵelement(7, "span", 5);
        ɵngcc0.ɵɵelementStart(8, "button", 6);
        ɵngcc0.ɵɵtext(9, " Change Shop ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 7);
        ɵngcc0.ɵɵelement(11, "mat-divider");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "mat-accordion", 8);
        ɵngcc0.ɵɵtemplate(13, DrawerComponent_mat_nav_list_13_Template, 6, 2, "mat-nav-list", 9);
        ɵngcc0.ɵɵtemplate(14, DrawerComponent_mat_divider_14_Template, 1, 0, "mat-divider", 10);
        ɵngcc0.ɵɵtemplate(15, DrawerComponent_mat_expansion_panel_15_Template, 11, 1, "mat-expansion-panel", 11);
        ɵngcc0.ɵɵtemplate(16, DrawerComponent_mat_divider_16_Template, 1, 0, "mat-divider", 10);
        ɵngcc0.ɵɵelementStart(17, "mat-nav-list");
        ɵngcc0.ɵɵelementStart(18, "mat-list-item", 12);
        ɵngcc0.ɵɵelementStart(19, "mat-icon", 13);
        ɵngcc0.ɵɵtext(20, "shop_front");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "span", 14);
        ɵngcc0.ɵɵtext(22, "Sale");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(23, "mat-divider");
        ɵngcc0.ɵɵtemplate(24, DrawerComponent_mat_expansion_panel_24_Template, 13, 3, "mat-expansion-panel", 11);
        ɵngcc0.ɵɵtemplate(25, DrawerComponent_mat_divider_25_Template, 1, 0, "mat-divider", 10);
        ɵngcc0.ɵɵtemplate(26, DrawerComponent_mat_nav_list_26_Template, 6, 2, "mat-nav-list", 10);
        ɵngcc0.ɵɵtemplate(27, DrawerComponent_mat_divider_27_Template, 1, 0, "mat-divider", 10);
        ɵngcc0.ɵɵelementStart(28, "mat-expansion-panel", 15);
        ɵngcc0.ɵɵelementStart(29, "mat-expansion-panel-header");
        ɵngcc0.ɵɵelementStart(30, "mat-icon", 16);
        ɵngcc0.ɵɵtext(31, "supervisor_account");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(32, "span", 17);
        ɵngcc0.ɵɵtext(33, "Account");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(34, "mat-nav-list");
        ɵngcc0.ɵɵtemplate(35, DrawerComponent_a_35_Template, 7, 0, "a", 18);
        ɵngcc0.ɵɵtemplate(36, DrawerComponent_a_36_Template, 7, 0, "a", 19);
        ɵngcc0.ɵɵelementStart(37, "a", 20);
        ɵngcc0.ɵɵelementStart(38, "div", 21);
        ɵngcc0.ɵɵelementStart(39, "span");
        ɵngcc0.ɵɵtext(40, "Profile");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(41, "span", 22);
        ɵngcc0.ɵɵelementStart(42, "mat-icon");
        ɵngcc0.ɵɵtext(43, "person");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(44, "span", 23);
        ɵngcc0.ɵɵelementStart(45, "div", 24);
        ɵngcc0.ɵɵelementStart(46, "span");
        ɵngcc0.ɵɵtext(47);
        ɵngcc0.ɵɵpipe(48, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ctx.shop);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("multi", true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isAdmin());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isAdmin());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isAdmin());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.currentUser && ctx.currentUser.role === "admin");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.shouldExpand("sale") ? ctx.selectedMenu : ɵngcc0.ɵɵpureFunction0(17, _c0));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isManager());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.currentUser && (ctx.currentUser.role === "admin" || ctx.currentUser.role === "manager"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isManager());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isManager());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("expanded", ctx.shouldExpand("settings"));
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isManager());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isManager());
        ɵngcc0.ɵɵadvance(11);
        ɵngcc0.ɵɵtextInterpolate1("Version: ", ɵngcc0.ɵɵpipeBind1(48, 15, ctx.versionNumber), "");
    } }, directives: [ɵngcc4.MatIcon, ɵngcc5.NgIf, ɵngcc3.MatButton, ɵngcc6.RouterLink, ɵngcc7.MatDivider, ɵngcc8.MatAccordion, ɵngcc9.MatNavList, ɵngcc9.MatListItem, ɵngcc5.NgStyle, ɵngcc9.MatListIconCssMatStyler, ɵngcc10.MatPrefix, ɵngcc11.MatLine, ɵngcc8.MatExpansionPanel, ɵngcc8.MatExpansionPanelHeader, ɵngcc6.RouterLinkWithHref], pipes: [ɵngcc5.AsyncPipe], styles: [".my-side-nav[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-height:100vh;width:100%;z-index:50000}.drawer-head[_ngcontent-%COMP%]{background-position:50%;background-repeat:no-repeat;background-size:cover;height:180px}div.mat-list-item-content[_ngcontent-%COMP%]{width:100%!important}mat-divider[_ngcontent-%COMP%]{margin-left:10%;margin-right:10%;width:80%}"] });
DrawerComponent.ctorParameters = () => [
    { type: UserService },
    { type: LogService },
    { type: EventService }
];
DrawerComponent.propDecorators = {
    versionNumber: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DrawerComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-drawer',
                template: `
    <div class="my-side-nav">
      <div>
        <div class="d-flex justify-content-center align-items-center flex-column" style="padding-bottom: 8px">
          <div style="padding: 16px; justify-content: center; align-items: center">
            <mat-icon style="width: 70px; height: 70px; font-size: 70px" color="primary">store</mat-icon>
          </div>
          <span style="max-width: 150px; overflow: hidden; text-overflow: ellipsis;"
                *ngIf="shop">{{shop.businessName}}</span>
          <span style="width: 4px; height: 4px"></span>
          <button style="width: 80%"
                  color="primary"
                  class="btn-block"
                  routerLink="/account/shop" mat-button>
            Change Shop
          </button>
        </div>

        <div class="d-flex justify-content-center align-items-center">
          <mat-divider></mat-divider>
        </div>

        <mat-accordion [multi]="true" class="mat-elevation-z0">
          <mat-nav-list *ngIf="isAdmin()" class="mat-elevation-z0">
            <mat-list-item [ngStyle]="shouldExpand('dashboard')?selectedMenu:{}" routerLink="/dashboard">
              <mat-icon matListIcon matPrefix>dashboard</mat-icon>
              <span matLine style="margin-left: 8px">Dashboard</span>
            </mat-list-item>
          </mat-nav-list>

          <mat-divider *ngIf="isAdmin()"></mat-divider>

          <mat-expansion-panel *ngIf="isAdmin()" [expanded]="shouldExpand('report')" class="mat-elevation-z0">
            <mat-expansion-panel-header>
              <mat-icon matPrefix>table_chart</mat-icon>
              <span style="margin-left: 8px">Reports</span>
            </mat-expansion-panel-header>
            <mat-nav-list>
              <a mat-list-item routerLink="/report/sales">Sales Reports</a>
              <a mat-list-item routerLink="/report/stocks">Stock Reports</a>
            </mat-nav-list>
          </mat-expansion-panel>

          <mat-divider *ngIf="currentUser && currentUser.role==='admin'"></mat-divider>

          <mat-nav-list>
            <mat-list-item [ngStyle]="shouldExpand('sale')?selectedMenu:{}" routerLink="/sale">
              <mat-icon matListIcon matPrefix>shop_front</mat-icon>
              <span matLine style="margin-left: 8px">Sale</span>
            </mat-list-item>
          </mat-nav-list>

          <mat-divider></mat-divider>

          <mat-expansion-panel *ngIf="isManager()" [expanded]="shouldExpand('purchase')" class="mat-elevation-z0">
            <mat-expansion-panel-header>
              <mat-icon matPrefix>receipts</mat-icon>
              <span style="margin-left: 8px">Purchase</span>
            </mat-expansion-panel-header>
            <mat-nav-list>
              <a mat-list-item routerLink="/purchase">All Purchases</a>
              <a mat-list-item routerLink="/purchase/create">New Purchase</a>
              <a mat-list-item routerLink="/stock" [queryParams]="{t:3}">Suppliers</a>
            </mat-nav-list>
          </mat-expansion-panel>

          <mat-divider *ngIf="currentUser && (currentUser.role==='admin' || currentUser.role === 'manager')"></mat-divider>

          <mat-nav-list *ngIf="isManager()">
            <mat-list-item [ngStyle]="shouldExpand('stock')?selectedMenu:{}" routerLink="/stock">
              <mat-icon matListIcon matPrefix>store</mat-icon>
              <span matLine style="margin-left: 8px">Stock</span>
            </mat-list-item>
          </mat-nav-list>

          <mat-divider *ngIf="isManager()"></mat-divider>

          <mat-expansion-panel [expanded]="shouldExpand('settings')" class="mat-elevation-z0">
            <mat-expansion-panel-header>
              <mat-icon matPrefix>supervisor_account</mat-icon>
              <span style="margin-left: 8px">Account</span>
            </mat-expansion-panel-header>
            <mat-nav-list>
              <a *ngIf="isManager()" mat-list-item
                 routerLink="/account/settings">
                <div class="d-flex flex-row flex-nowrap btn-block">
                  <span>Settings</span>
                  <span class="flex-grow-1"></span>
                  <mat-icon>settings</mat-icon>
                </div>
              </a>
              <a *ngIf="isManager()" mat-list-item
                 routerLink="/account/users">
                <div class="d-flex flex-row flex-nowrap btn-block">
                  <span>Users</span>
                  <span class="flex-grow-1"></span>
                  <mat-icon>person_add</mat-icon>
                </div>
              </a>
              <a mat-list-item routerLink="/account/profile">
                <div class="d-flex flex-row flex-nowrap btn-block">
                  <span>Profile</span>
                  <span class="flex-grow-1"></span>
                  <mat-icon>person</mat-icon>
                </div>
              </a>
            </mat-nav-list>
          </mat-expansion-panel>
        </mat-accordion>

      </div>
      <span style="flex-grow: 1"></span>
      <div style="display: flex; justify-content: center; align-items: center">
        <span>Version: {{versionNumber | async}}</span>
      </div>
    </div>
  `,
                styles: [".my-side-nav{display:flex;flex-direction:column;min-height:100vh;width:100%;z-index:50000}.drawer-head{background-position:50%;background-repeat:no-repeat;background-size:cover;height:180px}div.mat-list-item-content{width:100%!important}mat-divider{margin-left:10%;margin-right:10%;width:80%}"]
            }]
    }], function () { return [{ type: UserService }, { type: LogService }, { type: EventService }]; }, { versionNumber: [{
            type: Input
        }] }); })();

class ToolbarComponent {
    constructor(router, storage, userDatabase, eventService) {
        this.router = router;
        this.storage = storage;
        this.userDatabase = userDatabase;
        this.eventService = eventService;
        this.showProgress = false;
        this.hasBackRoute = false;
        this.showSearch = false;
        this.searchCallback = new EventEmitter();
        this.searchInputControl = new FormControl('');
        this.searchProgressFlag = false;
        this.isMobile = false; // environment.android;
    }
    ngOnInit() {
        this.storage.getActiveUser().then(user => {
            this.currentUser = user;
        });
        this.searchInputControl.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe(_ => {
            this.searchCallback.emit(this.searchInputControl.value);
        });
        this.getProductsInCart();
        this._clearSearchInputListener();
    }
    getProductsInCart() {
        this.eventService.listen(SsmEvents.NO_OF_CART, (data) => {
            this.noOfProductsInCart = data.detail;
        });
    }
    logout() {
        this.userDatabase.logout(null).finally(() => {
            return this.router.navigateByUrl('');
        }).catch(err => console.log(''));
    }
    _clearSearchInputListener() {
        // this.eventService.listen(SsmEvents.ADD_CART, data => {
        //   this.searchInputControl.reset('');
        // });
    }
}
ToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) { return new (t || ToolbarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Router), ɵngcc0.ɵɵdirectiveInject(StorageService), ɵngcc0.ɵɵdirectiveInject(UserService), ɵngcc0.ɵɵdirectiveInject(EventService)); };
ToolbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToolbarComponent, selectors: [["smartstock-toolbar"]], inputs: { showProgress: "showProgress", hasBackRoute: "hasBackRoute", showSearch: "showSearch", searchInputControl: "searchInputControl", searchProgressFlag: "searchProgressFlag", heading: "heading", sidenav: "sidenav", backLink: "backLink", cartdrawer: "cartdrawer", searchPlaceholder: "searchPlaceholder" }, outputs: { searchCallback: "searchCallback" }, decls: 26, vars: 10, consts: [["color", "primary", 1, "sticky-top", "mat-elevation-z4"], ["mat-icon-button", "", 3, "click"], ["style", "flex: 1 1 auto", 4, "ngIf"], ["style", "width: 16px", 4, "ngIf"], ["style", "flex: 1 1 auto", 3, "searchProgressFlag", "showSearch", "searchInputControl", "searchPlaceholder", 4, "ngIf"], ["mat-icon-button", "", 3, "matBadge", "click", 4, "ngIf"], ["class", "ft-button", "mat-button", "", 3, "matMenuTriggerFor", 4, "ngIf"], ["mat-icon-button", "", 3, "matMenuTriggerFor", 4, "ngIf"], ["menu", ""], ["mat-menu-item", "", 3, "click"], ["mat-menu-item", "", "routerLink", "/account/profile"], [4, "ngIf"], [2, "flex", "1 1 auto"], [2, "width", "16px"], [2, "flex", "1 1 auto", 3, "searchProgressFlag", "showSearch", "searchInputControl", "searchPlaceholder"], ["mat-icon-button", "", 3, "matBadge", "click"], ["mat-button", "", 1, "ft-button", 3, "matMenuTriggerFor"], ["mat-icon-button", "", 3, "matMenuTriggerFor"]], template: function ToolbarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-toolbar", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-toolbar-row");
        ɵngcc0.ɵɵelementStart(2, "button", 1);
        ɵngcc0.ɵɵlistener("click", function ToolbarComponent_Template_button_click_2_listener() { return ctx.sidenav.toggle(); });
        ɵngcc0.ɵɵelementStart(3, "mat-icon");
        ɵngcc0.ɵɵtext(4, "menu");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "span");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, ToolbarComponent_span_7_Template, 1, 0, "span", 2);
        ɵngcc0.ɵɵtemplate(8, ToolbarComponent_span_8_Template, 1, 0, "span", 3);
        ɵngcc0.ɵɵtemplate(9, ToolbarComponent_span_9_Template, 1, 0, "span", 2);
        ɵngcc0.ɵɵtemplate(10, ToolbarComponent_smartstock_search_input_10_Template, 1, 4, "smartstock-search-input", 4);
        ɵngcc0.ɵɵtemplate(11, ToolbarComponent_span_11_Template, 1, 0, "span", 3);
        ɵngcc0.ɵɵtemplate(12, ToolbarComponent_button_12_Template, 3, 1, "button", 5);
        ɵngcc0.ɵɵtemplate(13, ToolbarComponent_button_13_Template, 4, 2, "button", 6);
        ɵngcc0.ɵɵtemplate(14, ToolbarComponent_button_14_Template, 3, 1, "button", 7);
        ɵngcc0.ɵɵelementStart(15, "mat-menu", null, 8);
        ɵngcc0.ɵɵelementStart(17, "button", 9);
        ɵngcc0.ɵɵlistener("click", function ToolbarComponent_Template_button_click_17_listener() { return ctx.logout(); });
        ɵngcc0.ɵɵelementStart(18, "mat-icon");
        ɵngcc0.ɵɵtext(19, "exit_to_app");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(20, " Logout ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "button", 10);
        ɵngcc0.ɵɵelementStart(22, "mat-icon");
        ɵngcc0.ɵɵtext(23, "person");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(24, " My Profile ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(25, ToolbarComponent_mat_toolbar_row_25_Template, 2, 4, "mat-toolbar-row", 11);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ctx.heading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMobile);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isMobile && ctx.showSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isMobile && !ctx.showSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isMobile && ctx.showSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isMobile && ctx.showSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.noOfProductsInCart > 0 && !ctx.isMobile);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isMobile);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMobile);
        ɵngcc0.ɵɵadvance(11);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMobile && ctx.showSearch);
    } }, directives: function () { return [ɵngcc12.MatToolbar, ɵngcc12.MatToolbarRow, ɵngcc3.MatButton, ɵngcc4.MatIcon, ɵngcc5.NgIf, ɵngcc13._MatMenu, ɵngcc13.MatMenuItem, ɵngcc6.RouterLink, SearchInputComponent, ɵngcc14.MatBadge, ɵngcc13.MatMenuTrigger]; }, encapsulation: 2 });
ToolbarComponent.ctorParameters = () => [
    { type: Router },
    { type: StorageService },
    { type: UserService },
    { type: EventService }
];
ToolbarComponent.propDecorators = {
    heading: [{ type: Input }],
    showProgress: [{ type: Input }],
    sidenav: [{ type: Input }],
    hasBackRoute: [{ type: Input }],
    backLink: [{ type: Input }],
    cartdrawer: [{ type: Input }],
    showSearch: [{ type: Input }],
    searchCallback: [{ type: Output }],
    searchInputControl: [{ type: Input }],
    searchPlaceholder: [{ type: Input }],
    searchProgressFlag: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToolbarComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-toolbar',
                template: `
    <mat-toolbar color="primary" class="sticky-top mat-elevation-z4">
      <mat-toolbar-row>
<!--        <button routerLink="{{backLink}}" *ngIf="hasBackRoute && backLink" mat-icon-button>-->
<!--          <mat-icon>arrow_back</mat-icon>-->
<!--        </button>-->
        <button mat-icon-button (click)="sidenav.toggle()">
          <mat-icon>menu</mat-icon>
        </button>
        <span>{{heading}}</span>
        <span *ngIf="isMobile" style="flex: 1 1 auto"></span>
        <span *ngIf="!isMobile && showSearch" style="width: 16px"></span>
        <span *ngIf="!isMobile && !showSearch" style="flex: 1 1 auto"></span>
        <smartstock-search-input [searchProgressFlag]="searchProgressFlag"
                          *ngIf="!isMobile && showSearch" style="flex: 1 1 auto"
                          [showSearch]="showSearch"
                          [searchInputControl]="searchInputControl"
                          [searchPlaceholder]="searchPlaceholder">
        </smartstock-search-input>
        <span *ngIf="!isMobile && showSearch" style="width: 16px"></span>
        <button *ngIf="noOfProductsInCart> 0 && !isMobile" mat-icon-button (click)="cartdrawer.toggle()"
                [matBadge]="noOfProductsInCart">
          <mat-icon>shopping_cart</mat-icon>
        </button>
        <button *ngIf="!isMobile" class="ft-button" mat-button [matMenuTriggerFor]="menu">
          <mat-icon>account_circle</mat-icon>
          <span *ngIf="currentUser">{{"  " + currentUser.username}}</span>
        </button>
        <button *ngIf="isMobile" mat-icon-button [matMenuTriggerFor]="menu">
          <mat-icon>more_vert</mat-icon>
          <!--      <span *ngIf="currentUser">{{"  " + currentUser.username}}</span>-->
        </button>
        <mat-menu #menu>
          <button mat-menu-item (click)="logout()">
            <mat-icon>exit_to_app</mat-icon>
            Logout
          </button>
          <button mat-menu-item routerLink="/account/profile">
            <mat-icon>person</mat-icon>
            My Profile
          </button>
        </mat-menu>
      </mat-toolbar-row>

      <mat-toolbar-row *ngIf="isMobile && showSearch">
        <!--    <span style="flex-grow: 1"></span>-->
        <smartstock-search-input [searchProgressFlag]="searchProgressFlag"
                          style="flex: 1 1 auto"
                          [showSearch]="showSearch"
                          [searchInputControl]="searchInputControl"
                          [searchPlaceholder]="searchPlaceholder">
        </smartstock-search-input>
        <!--    <span style="flex-grow: 1"></span>-->
      </mat-toolbar-row>
    </mat-toolbar>
  `
            }]
    }], function () { return [{ type: ɵngcc6.Router }, { type: StorageService }, { type: UserService }, { type: EventService }]; }, { showProgress: [{
            type: Input
        }], hasBackRoute: [{
            type: Input
        }], showSearch: [{
            type: Input
        }], searchCallback: [{
            type: Output
        }], searchInputControl: [{
            type: Input
        }], searchProgressFlag: [{
            type: Input
        }], heading: [{
            type: Input
        }], sidenav: [{
            type: Input
        }], backLink: [{
            type: Input
        }], cartdrawer: [{
            type: Input
        }], searchPlaceholder: [{
            type: Input
        }] }); })();

class NoStockDialogComponent {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    ngOnInit() {
    }
}
NoStockDialogComponent.ɵfac = function NoStockDialogComponent_Factory(t) { return new (t || NoStockDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
NoStockDialogComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NoStockDialogComponent, selectors: [["smartstock-no-stock-dialog"]], decls: 10, vars: 0, consts: [["mat-dialog-content", ""], ["mat-dialog-actions", ""], ["routerLink", "/stock", "mat-flat-button", "", "color", "primary", 3, "click"], ["mat-flat-button", "", "color", "warn", 3, "click"]], template: function NoStockDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "h5");
        ɵngcc0.ɵɵtext(2, "Hello!");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "mat-card-subtitle", 0);
        ɵngcc0.ɵɵtext(4, " StockModel is not available yet, add product or refresh your stock ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 1);
        ɵngcc0.ɵɵelementStart(6, "button", 2);
        ɵngcc0.ɵɵlistener("click", function NoStockDialogComponent_Template_button_click_6_listener() { return ctx.dialogRef.close(); });
        ɵngcc0.ɵɵtext(7, "Go To StockModel");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "button", 3);
        ɵngcc0.ɵɵlistener("click", function NoStockDialogComponent_Template_button_click_8_listener() { return ctx.dialogRef.close(); });
        ɵngcc0.ɵɵtext(9, "Close");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } }, directives: [ɵngcc15.MatCardSubtitle, ɵngcc2.MatDialogContent, ɵngcc2.MatDialogActions, ɵngcc3.MatButton, ɵngcc6.RouterLink], encapsulation: 2 });
NoStockDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoStockDialogComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-no-stock-dialog',
                template: `
    <div>
      <h5>Hello!</h5>
      <mat-card-subtitle mat-dialog-content>
        StockModel is not available yet, add product or refresh your stock
      </mat-card-subtitle>
      <div mat-dialog-actions>
        <button (click)="dialogRef.close()" routerLink="/stock" mat-flat-button color="primary">Go To StockModel</button>
        <button (click)="dialogRef.close()" mat-flat-button color="warn">Close</button>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc2.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, null); })();

class ShopsPipe {
    constructor(userApi) {
        this.userApi = userApi;
    }
    transform(shops, ...args) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const shop = yield this.userApi.getCurrentShop();
                shops.push(shop);
                return shops.map(value => value.businessName);
            }
            catch (e) {
                return [];
            }
        });
    }
}
ShopsPipe.ɵfac = function ShopsPipe_Factory(t) { return new (t || ShopsPipe)(ɵngcc0.ɵɵdirectiveInject(UserService)); };
ShopsPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "shopsPipe", type: ShopsPipe, pure: true });
ShopsPipe.ctorParameters = () => [
    { type: UserService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShopsPipe, [{
        type: Pipe,
        args: [{
                name: 'shopsPipe'
            }]
    }], function () { return [{ type: UserService }]; }, null); })();

class OnFetchComponent {
    constructor() {
        this.refreshCallback = new EventEmitter();
    }
    ngOnInit() {
    }
    callBack() {
        this.refreshCallback.emit();
    }
}
OnFetchComponent.ɵfac = function OnFetchComponent_Factory(t) { return new (t || OnFetchComponent)(); };
OnFetchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: OnFetchComponent, selectors: [["smartstock-on-fetch"]], inputs: { isLoading: "isLoading" }, outputs: { refreshCallback: "refreshCallback" }, decls: 2, vars: 2, consts: [["class", "no-data-wrapper", 4, "ngIf"], [1, "no-data-wrapper"], ["src", "/src/assets/img/empty.svg", "width", "200px", "alt", ""], ["matTooltip", "Click to refresh", "mat-raised-button", "", "mat-icon-button", "", 3, "click"], ["color", "accent"], ["src", "/src/assets/img/data.svg", "width", "200px", "alt", ""], ["color", "accent", "mode", "indeterminate", 3, "diameter"]], template: function OnFetchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OnFetchComponent_div_0_Template, 7, 0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, OnFetchComponent_div_1_Template, 5, 1, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoading);
    } }, directives: [ɵngcc5.NgIf, ɵngcc3.MatButton, ɵngcc16.MatTooltip, ɵngcc4.MatIcon, ɵngcc17.MatProgressSpinner], styles: [".no-data-wrapper[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:column;justify-content:center;margin-top:48px}.no-data-wrapper[_ngcontent-%COMP%] > h4[_ngcontent-%COMP%]{padding:8px}"] });
OnFetchComponent.ctorParameters = () => [];
OnFetchComponent.propDecorators = {
    refreshCallback: [{ type: Output }],
    isLoading: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OnFetchComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-on-fetch',
                template: `
    <div *ngIf="!isLoading" class="no-data-wrapper">
      <img src="/src/assets/img/empty.svg" width="200px" alt="">
      <h4>No Data</h4>
      <button (click)="callBack()" matTooltip="Click to refresh" mat-raised-button mat-icon-button>
        <mat-icon color="accent">
          refresh
        </mat-icon>
      </button>
    </div>

    <div *ngIf="isLoading" class="no-data-wrapper">
      <img src="/src/assets/img/data.svg" width="200px" alt="">
      <h4>Fetching data...</h4>
      <mat-progress-spinner color="accent" mode="indeterminate" [diameter]="30"></mat-progress-spinner>
    </div>
  `,
                styles: [".no-data-wrapper{align-items:center;display:flex;flex-direction:column;justify-content:center;margin-top:48px}.no-data-wrapper>h4{padding:8px}"]
            }]
    }], function () { return []; }, { refreshCallback: [{
            type: Output
        }], isLoading: [{
            type: Input
        }] }); })();

class SearchInputComponent {
    constructor() {
        this.showSearch = false;
        this.searchProgressFlag = false;
        this.searchPlaceholder = 'Enter something...';
    }
    ngOnInit() {
    }
}
SearchInputComponent.ɵfac = function SearchInputComponent_Factory(t) { return new (t || SearchInputComponent)(); };
SearchInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchInputComponent, selectors: [["smartstock-search-input"]], inputs: { showSearch: "showSearch", searchProgressFlag: "searchProgressFlag", searchPlaceholder: "searchPlaceholder", searchInputControl: "searchInputControl" }, decls: 3, vars: 2, consts: [[2, "width", "100%"], ["class", "toolbar-input", "type", "text", 3, "formControl", "placeholder", 4, "ngIf"], ["style", "display: inline-block; margin-left: -30px", "mode", "indeterminate", "diameter", "25", "color", "primary", "matSuffix", "", 4, "ngIf"], ["type", "text", 1, "toolbar-input", 3, "formControl", "placeholder"], ["mode", "indeterminate", "diameter", "25", "color", "primary", "matSuffix", "", 2, "display", "inline-block", "margin-left", "-30px"]], template: function SearchInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SearchInputComponent_input_1_Template, 1, 2, "input", 1);
        ɵngcc0.ɵɵtemplate(2, SearchInputComponent_mat_progress_spinner_2_Template, 1, 0, "mat-progress-spinner", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showSearch && ctx.searchProgressFlag);
    } }, directives: [ɵngcc5.NgIf, ɵngcc18.DefaultValueAccessor, ɵngcc18.NgControlStatus, ɵngcc18.FormControlDirective, ɵngcc17.MatProgressSpinner, ɵngcc10.MatSuffix], styles: [".toolbar-input[_ngcontent-%COMP%]{background:hsla(0,0%,96.5%,.76);border:none;border-radius:4px;box-shadow:none;color:#000;outline:none;padding:8px;width:100%}.toolbar-input[_ngcontent-%COMP%]::-moz-placeholder{color:#535353}.toolbar-input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#535353}.toolbar-input[_ngcontent-%COMP%]::placeholder{color:#535353}.toolbar-input[_ngcontent-%COMP%]:focus{outline:none}"] });
SearchInputComponent.ctorParameters = () => [];
SearchInputComponent.propDecorators = {
    searchInputControl: [{ type: Input }],
    showSearch: [{ type: Input }],
    searchProgressFlag: [{ type: Input }],
    searchPlaceholder: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchInputComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-search-input',
                template: `
    <div style="width: 100%">
      <input [formControl]="searchInputControl"
             *ngIf="showSearch"
             class="toolbar-input" type="text" placeholder="{{searchPlaceholder}}">
      <mat-progress-spinner style="display: inline-block; margin-left: -30px"
                            mode="indeterminate" diameter="25"
                            color="primary"
                            *ngIf="showSearch && searchProgressFlag"
                            matSuffix>
        <!--      <mat-icon>search</mat-icon>-->
      </mat-progress-spinner>
    </div>
  `,
                styles: [".toolbar-input{background:hsla(0,0%,96.5%,.76);border:none;border-radius:4px;box-shadow:none;color:#000;outline:none;padding:8px;width:100%}.toolbar-input::-moz-placeholder{color:#535353}.toolbar-input:-ms-input-placeholder{color:#535353}.toolbar-input::placeholder{color:#535353}.toolbar-input:focus{outline:none}"]
            }]
    }], function () { return []; }, { showSearch: [{
            type: Input
        }], searchProgressFlag: [{
            type: Input
        }], searchPlaceholder: [{
            type: Input
        }], searchInputControl: [{
            type: Input
        }] }); })();

class BottomBarComponent {
    constructor() {
    }
    ngOnInit() {
    }
    activeNav(route) {
        const url = new URL(location.href);
        return url.pathname.startsWith('/' + route);
    }
}
BottomBarComponent.ɵfac = function BottomBarComponent_Factory(t) { return new (t || BottomBarComponent)(); };
BottomBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BottomBarComponent, selectors: [["smartstock-bottom-bar"]], decls: 16, vars: 10, consts: [[1, "fixed-bottom", "bottom-smartstock-bar"], [1, "flex-grow-1", "d-flex", "justify-content-center", "align-items-center", "flex-column"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/dashboard", 4, "ngIf"], ["mat-icon-button", "", "routerLink", "/dashboard", 4, "ngIf"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/sale", 4, "ngIf"], ["mat-icon-button", "", "routerLink", "/sale", 4, "ngIf"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/purchase", 4, "ngIf"], ["mat-icon-button", "", "routerLink", "/purchase", 4, "ngIf"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/stock", 4, "ngIf"], ["mat-icon-button", "", "routerLink", "/stock", 4, "ngIf"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/account", 4, "ngIf"], ["mat-icon-button", "", "routerLink", "/account", 4, "ngIf"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/dashboard"], [3, "color"], ["mat-icon-button", "", "routerLink", "/dashboard"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/sale"], ["mat-icon-button", "", "routerLink", "/sale"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/purchase"], ["mat-icon-button", "", "routerLink", "/purchase"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/stock"], ["mat-icon-button", "", "routerLink", "/stock"], ["mat-icon-button", "", "mat-flat-button", "", "routerLink", "/account"], ["mat-icon-button", "", "routerLink", "/account"]], template: function BottomBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-toolbar", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, BottomBarComponent_button_2_Template, 3, 1, "button", 2);
        ɵngcc0.ɵɵtemplate(3, BottomBarComponent_button_3_Template, 3, 0, "button", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 1);
        ɵngcc0.ɵɵtemplate(5, BottomBarComponent_button_5_Template, 3, 1, "button", 4);
        ɵngcc0.ɵɵtemplate(6, BottomBarComponent_button_6_Template, 3, 0, "button", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 1);
        ɵngcc0.ɵɵtemplate(8, BottomBarComponent_button_8_Template, 3, 1, "button", 6);
        ɵngcc0.ɵɵtemplate(9, BottomBarComponent_button_9_Template, 3, 0, "button", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 1);
        ɵngcc0.ɵɵtemplate(11, BottomBarComponent_button_11_Template, 3, 1, "button", 8);
        ɵngcc0.ɵɵtemplate(12, BottomBarComponent_button_12_Template, 3, 0, "button", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "div", 1);
        ɵngcc0.ɵɵtemplate(14, BottomBarComponent_button_14_Template, 3, 1, "button", 10);
        ɵngcc0.ɵɵtemplate(15, BottomBarComponent_button_15_Template, 3, 0, "button", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.activeNav("dashboard"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.activeNav("dashboard"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.activeNav("sale"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.activeNav("sale"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.activeNav("purchase"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.activeNav("purchase"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.activeNav("stock"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.activeNav("stock"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.activeNav("settings"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.activeNav("settings"));
    } }, directives: [ɵngcc12.MatToolbar, ɵngcc5.NgIf, ɵngcc3.MatButton, ɵngcc6.RouterLink, ɵngcc4.MatIcon], styles: ["span[_ngcontent-%COMP%]{font-size:11px;font-weight:lighter}.bottom-smartstock-bar[_ngcontent-%COMP%]{background:#fff;box-shadow:0 -1px 7px rgba(0,0,0,.35)}"] });
BottomBarComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BottomBarComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-bottom-bar',
                template: `
    <mat-toolbar class="fixed-bottom bottom-smartstock-bar">

      <div class="flex-grow-1 d-flex justify-content-center align-items-center flex-column">
        <button mat-icon-button *ngIf="activeNav('dashboard')" mat-flat-button routerLink="/dashboard">
          <mat-icon color="{{activeNav('dashboard')?'primary':''}}">dashboard</mat-icon>
        </button>
        <button *ngIf="!activeNav('dashboard')" mat-icon-button routerLink="/dashboard">
          <mat-icon>dashboard</mat-icon>
        </button>
        <!--    <span *ngIf="activeNav('dashboard')">Dashboard</span>-->
      </div>

      <div class="flex-grow-1 d-flex justify-content-center align-items-center flex-column">
        <button mat-icon-button *ngIf="activeNav('sale')" mat-flat-button routerLink="/sale">
          <mat-icon color="{{activeNav('sale')?'primary':''}}">shop</mat-icon>
        </button>
        <button *ngIf="!activeNav('sale')" mat-icon-button routerLink="/sale">
          <mat-icon>shop</mat-icon>
        </button>
        <!--    <span *ngIf="activeNav('sale')">Sale</span>-->
      </div>

      <div class="flex-grow-1 d-flex justify-content-center align-items-center flex-column">
        <button mat-icon-button *ngIf="activeNav('purchase')" mat-flat-button routerLink="/purchase">
          <mat-icon color="{{activeNav('purchase')?'primary':''}}">receipt</mat-icon>
        </button>
        <button *ngIf="!activeNav('purchase')" mat-icon-button routerLink="/purchase">
          <mat-icon>receipt</mat-icon>
        </button>
        <!--    <span *ngIf="activeNav('purchase')">Purchase</span>-->
      </div>

      <div class="flex-grow-1 d-flex justify-content-center align-items-center flex-column">
        <button mat-icon-button *ngIf="activeNav('stock')" mat-flat-button routerLink="/stock">
          <mat-icon color="{{activeNav('stock')?'primary':''}}">store</mat-icon>
        </button>
        <button *ngIf="!activeNav('stock')" mat-icon-button routerLink="/stock">
          <mat-icon>store</mat-icon>
        </button>
        <!--    <span *ngIf="activeNav('stock')">StockModel</span>-->
      </div>

      <div class="flex-grow-1 d-flex justify-content-center align-items-center flex-column">
        <button mat-icon-button *ngIf="activeNav('settings')" mat-flat-button routerLink="/account">
          <mat-icon color="{{activeNav('settings')?'primary':''}}">settings</mat-icon>
        </button>
        <button *ngIf="!activeNav('settings')" mat-icon-button routerLink="/account">
          <mat-icon>settings</mat-icon>
        </button>
        <!--    <span *ngIf="activeNav('settings')">Settings</span>-->
      </div>

    </mat-toolbar>
  `,
                styles: ["span{font-size:11px;font-weight:lighter}.bottom-smartstock-bar{background:#fff;box-shadow:0 -1px 7px rgba(0,0,0,.35)}"]
            }]
    }], function () { return []; }, null); })();

class DataNotReadyComponent {
    constructor() {
        this.width = 200;
        this.height = 200;
        this.isLoading = false;
    }
    ngOnInit() {
    }
}
DataNotReadyComponent.ɵfac = function DataNotReadyComponent_Factory(t) { return new (t || DataNotReadyComponent)(); };
DataNotReadyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataNotReadyComponent, selectors: [["smartstock-data-not-ready"]], inputs: { width: "width", height: "height", isLoading: "isLoading" }, decls: 2, vars: 2, consts: [["style", "margin-top: 10px; margin-bottom: 10px", "class", "d-flex flex-column justify-content-center align-items-center", 4, "ngIf"], ["style", "width: 100%; height: 100%; display: flex; justify-content: center; align-items: center", 4, "ngIf"], [1, "d-flex", "flex-column", "justify-content-center", "align-items-center", 2, "margin-top", "10px", "margin-bottom", "10px"], ["alt", "no data", "src", "../../../../assets/img/data.svg", 3, "width", "height"], [2, "width", "100%", "height", "100%", "display", "flex", "justify-content", "center", "align-items", "center"], ["mode", "indeterminate", 3, "diameter"]], template: function DataNotReadyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DataNotReadyComponent_div_0_Template, 4, 2, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DataNotReadyComponent_div_1_Template, 2, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoading);
    } }, directives: [ɵngcc5.NgIf, ɵngcc17.MatProgressSpinner], encapsulation: 2 });
DataNotReadyComponent.ctorParameters = () => [];
DataNotReadyComponent.propDecorators = {
    width: [{ type: Input }],
    height: [{ type: Input }],
    isLoading: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataNotReadyComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-data-not-ready',
                template: `
    <div *ngIf="!isLoading" style="margin-top: 10px; margin-bottom: 10px"
         class="d-flex flex-column justify-content-center align-items-center">
      <img alt="no data" src="../../../../assets/img/data.svg" width="{{width}}" height="{{height}}"/>
      <span>Data is not ready yet</span>
    </div>
    <div *ngIf="isLoading" style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
      <mat-progress-spinner mode="indeterminate" [diameter]="30"></mat-progress-spinner>
    </div>
  `
            }]
    }], function () { return []; }, { width: [{
            type: Input
        }], height: [{
            type: Input
        }], isLoading: [{
            type: Input
        }] }); })();

class UploadFilesComponent {
    constructor() {
        this.files = [];
        this.uploadFileFormControl = new FormControl([], [Validators.nullValidator, Validators.required]);
    }
    ngOnInit() {
    }
    removeFile($event, i) {
        $event.preventDefault();
        this.files.splice(i, 1);
    }
    uploadFiles($event, uploadFile) {
        return __awaiter(this, void 0, void 0, function* () {
            const files = $event.target['files'];
            if (files.item(0)) {
                const file = files.item(0);
                if (this.files.length === 0) {
                    this.files.push({
                        name: file.name,
                        type: file.type,
                        url: file,
                    });
                }
                else {
                    this.files = this.files.filter(value => file.name !== value.name);
                    this.files.push({
                        name: file.name,
                        type: file.type,
                        url: file
                    });
                }
                this.uploadFileFormControl.setValue(this.files);
                uploadFile.value = '';
            }
        });
    }
}
UploadFilesComponent.ɵfac = function UploadFilesComponent_Factory(t) { return new (t || UploadFilesComponent)(); };
UploadFilesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: UploadFilesComponent, selectors: [["smartstock-upload-files"]], inputs: { files: "files", uploadFileFormControl: "uploadFileFormControl" }, decls: 9, vars: 2, consts: [[2, "display", "flex", "flex-direction", "row", "flex-wrap", "wrap", "align-items", "center", "padding", "8px"], ["style", "display: flex; flex-direction: row; flex-wrap: nowrap; align-items: center", 4, "ngFor", "ngForOf"], ["matRipple", "", 2, "width", "120px", "height", "50px", "margin", "5px", 3, "click"], ["type", "file", 2, "display", "none", 3, "multiple", "change"], ["uploadFile", ""], [2, "display", "flex", "flex-direction", "row", "flex-wrap", "nowrap", "align-items", "center"], [2, "height", "50px", "margin", "5px", "display", "flex", "flex-direction", "row", "align-items", "center"], [2, "max-width", "200px", "overflow", "hidden", "white-space", "nowrap", "text-overflow", "ellipsis"], [2, "width", "10px"], ["mat-icon-button", "", 2, "display", "inline-block", 3, "click"], ["color", "warn"]], template: function UploadFilesComponent_Template(rf, ctx) { if (rf & 1) {
        const _r6 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, UploadFilesComponent_div_1_Template, 8, 1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "mat-card", 2);
        ɵngcc0.ɵɵlistener("click", function UploadFilesComponent_Template_mat_card_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r6); const _r1 = ɵngcc0.ɵɵreference(8); return _r1.click(); });
        ɵngcc0.ɵɵelementStart(3, "mat-icon");
        ɵngcc0.ɵɵtext(4, "attachment");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "span");
        ɵngcc0.ɵɵtext(6, "Add File");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "input", 3, 4);
        ɵngcc0.ɵɵlistener("change", function UploadFilesComponent_Template_input_change_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const _r1 = ɵngcc0.ɵɵreference(8); return ctx.uploadFiles($event, _r1); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.files);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("multiple", false);
    } }, directives: [ɵngcc5.NgForOf, ɵngcc15.MatCard, ɵngcc11.MatRipple, ɵngcc4.MatIcon, ɵngcc3.MatButton], encapsulation: 2 });
UploadFilesComponent.ctorParameters = () => [];
UploadFilesComponent.propDecorators = {
    files: [{ type: Input }],
    uploadFileFormControl: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UploadFilesComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-upload-files',
                template: `
    <div style="display: flex; flex-direction: row; flex-wrap: wrap; align-items: center; padding: 8px">
      <div *ngFor="let file of files; let i =index"
           style="display: flex; flex-direction: row; flex-wrap: nowrap; align-items: center">
        <mat-card style="height: 50px; margin: 5px; display: flex; flex-direction: row; align-items: center">
          <span style="max-width: 200px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis">
            {{file.name}}
          </span>
          <span style="width: 10px"></span>
          <button mat-icon-button style="display: inline-block" (click)="removeFile($event, i)">
            <mat-icon color="warn">delete</mat-icon>
          </button>
        </mat-card>
      </div>
      <mat-card (click)="uploadFile.click()" matRipple style="width: 120px; height: 50px; margin: 5px">
        <mat-icon>attachment</mat-icon>
        <span>Add File</span>
      </mat-card>
    </div>

    <input style="display: none" #uploadFile [multiple]="false" type="file" (change)="uploadFiles($event,uploadFile)">
  `
            }]
    }], function () { return []; }, { files: [{
            type: Input
        }], uploadFileFormControl: [{
            type: Input
        }] }); })();

class DashCardComponent {
    constructor(router) {
        this.router = router;
        this.title = '';
        this.height = 300;
        this.description = '';
    }
    ngOnInit() {
    }
    goTo() {
        if (this.reportLink) {
            this.router.navigateByUrl(this.reportLink).catch(console.log);
        }
    }
}
DashCardComponent.ɵfac = function DashCardComponent_Factory(t) { return new (t || DashCardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Router)); };
DashCardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DashCardComponent, selectors: [["smartstock-dash-card"]], inputs: { title: "title", height: "height", description: "description", reportLink: "reportLink", content: "content" }, decls: 11, vars: 8, consts: [[1, "d-flex", "flex-column", 3, "ngStyle"], [2, "margin", "0"], [2, "margin-left", "8px"], [3, "matTooltip"], [1, "flex-grow-1"], [3, "ngTemplateOutlet"], ["style", "width: 100%; margin: 0; padding: 0", 4, "ngIf"], ["class", "d-flex flex-row", 4, "ngIf"], [2, "width", "100%", "margin", "0", "padding", "0"], [1, "d-flex", "flex-row"], [2, "flex", "1 1 auto"], ["color", "primary", "mat-button", "", 3, "click"], ["matSuffix", ""]], template: function DashCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-card", 0);
        ɵngcc0.ɵɵelementStart(1, "mat-card-header", 1);
        ɵngcc0.ɵɵelementStart(2, "span");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "span", 2);
        ɵngcc0.ɵɵelementStart(5, "mat-icon", 3);
        ɵngcc0.ɵɵtext(6, "info_outline");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "mat-card-content", 4);
        ɵngcc0.ɵɵelementContainer(8, 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, DashCardComponent_hr_9_Template, 1, 0, "hr", 6);
        ɵngcc0.ɵɵtemplate(10, DashCardComponent_mat_card_actions_10_Template, 6, 0, "mat-card-actions", 7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx.height + "px"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("matTooltip", ctx.description);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.content);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.reportLink);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.reportLink);
    } }, directives: [ɵngcc15.MatCard, ɵngcc5.NgStyle, ɵngcc15.MatCardHeader, ɵngcc4.MatIcon, ɵngcc16.MatTooltip, ɵngcc15.MatCardContent, ɵngcc5.NgTemplateOutlet, ɵngcc5.NgIf, ɵngcc15.MatCardActions, ɵngcc3.MatButton, ɵngcc10.MatSuffix], encapsulation: 2 });
DashCardComponent.ctorParameters = () => [
    { type: Router }
];
DashCardComponent.propDecorators = {
    title: [{ type: Input }],
    height: [{ type: Input }],
    description: [{ type: Input }],
    reportLink: [{ type: Input }],
    content: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DashCardComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-dash-card',
                template: `
    <mat-card class="d-flex flex-column" [ngStyle]="{height:height+'px'}">
      <mat-card-header style="margin: 0">
        <span>{{title}}</span>
        <span style="margin-left: 8px"></span>
        <mat-icon matTooltip="{{description}}">info_outline</mat-icon>
      </mat-card-header>
      <mat-card-content class="flex-grow-1">
        <ng-container [ngTemplateOutlet]="content"></ng-container>
      </mat-card-content>
      <hr *ngIf="reportLink" style="width: 100%; margin: 0; padding: 0">
      <mat-card-actions *ngIf="reportLink" class="d-flex flex-row">
        <span style="flex: 1 1 auto"></span>
        <button (click)="goTo()"color="primary" mat-button>
          EXPLORE REPORT
          <mat-icon matSuffix>arrow_forward</mat-icon>
        </button>
      </mat-card-actions>
    </mat-card>
  `
            }]
    }], function () { return [{ type: ɵngcc6.Router }]; }, { title: [{
            type: Input
        }], height: [{
            type: Input
        }], description: [{
            type: Input
        }], reportLink: [{
            type: Input
        }], content: [{
            type: Input
        }] }); })();

class UploadFileProgressComponent {
    constructor() {
        this.name = '';
        this.onUploadFlag = false;
        this.uploadPercentage = 0;
    }
    ngOnInit() {
    }
}
UploadFileProgressComponent.ɵfac = function UploadFileProgressComponent_Factory(t) { return new (t || UploadFileProgressComponent)(); };
UploadFileProgressComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: UploadFileProgressComponent, selectors: [["smartstock-upload-file-progress"]], inputs: { name: "name", onUploadFlag: "onUploadFlag", uploadPercentage: "uploadPercentage" }, decls: 1, vars: 1, consts: [[4, "ngIf"], ["mode", "determinate", 3, "bufferValue", "value"]], template: function UploadFileProgressComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, UploadFileProgressComponent_div_0_Template, 4, 4, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.onUploadFlag);
    } }, directives: [ɵngcc5.NgIf, ɵngcc19.MatProgressBar], encapsulation: 2 });
UploadFileProgressComponent.ctorParameters = () => [];
UploadFileProgressComponent.propDecorators = {
    name: [{ type: Input }],
    onUploadFlag: [{ type: Input }],
    uploadPercentage: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UploadFileProgressComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-upload-file-progress',
                template: `
    <div *ngIf="onUploadFlag">
      <mat-progress-bar [bufferValue]="100" mode="determinate" [value]="uploadPercentage"></mat-progress-bar>
      <span>{{name}} {{uploadPercentage}}%</span>
    </div>
  `
            }]
    }], function () { return []; }, { name: [{
            type: Input
        }], onUploadFlag: [{
            type: Input
        }], uploadPercentage: [{
            type: Input
        }] }); })();

class DialogDeleteComponent {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    delete(stock) {
        this.dialogRef.close(stock);
    }
    cancel() {
        this.dialogRef.close('no');
    }
}
DialogDeleteComponent.ɵfac = function DialogDeleteComponent_Factory(t) { return new (t || DialogDeleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatDialogRef), ɵngcc0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };
DialogDeleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DialogDeleteComponent, selectors: [["smartstock-lisb-dialog-delete"]], decls: 14, vars: 1, consts: [[1, "container"], [1, "row"], [1, "col-12"], [1, "text-center"], [1, "d-flex", "justify-content-center"], [1, "align-self-center", 2, "margin", "8px"], ["color", "primary", "mat-button", "", 3, "click"], [1, "alert-secondary", 2, "margin", "8px"]], template: function DialogDeleteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "mat-panel-title", 3);
        ɵngcc0.ɵɵtext(4, " Your about to delete : ");
        ɵngcc0.ɵɵelementStart(5, "b");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵelementStart(9, "button", 6);
        ɵngcc0.ɵɵlistener("click", function DialogDeleteComponent_Template_button_click_9_listener() { return ctx.delete(ctx.data); });
        ɵngcc0.ɵɵtext(10, "Delete");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 7);
        ɵngcc0.ɵɵelementStart(12, "button", 6);
        ɵngcc0.ɵɵlistener("click", function DialogDeleteComponent_Template_button_click_12_listener() { return ctx.cancel(); });
        ɵngcc0.ɵɵtext(13, "Cancel");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(" " + ctx.data.product);
    } }, directives: [ɵngcc8.MatExpansionPanelTitle, ɵngcc3.MatButton], encapsulation: 2 });
DialogDeleteComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DialogDeleteComponent, [{
        type: Component,
        args: [{
                selector: 'smartstock-lisb-dialog-delete',
                template: `
    <div class="container">
      <div class="row">
        <div class="col-12">
          <mat-panel-title class="text-center">
            Your about to delete :  <b>{{' '+ data.product}}</b>
          </mat-panel-title>
        </div>
      </div>
      <div class="d-flex justify-content-center">
        <div class="align-self-center" style="margin: 8px">
          <button color="primary"  mat-button (click)="delete(data)">Delete</button>
        </div>
        <div class="alert-secondary" style="margin: 8px">
          <button color="primary" mat-button (click)="cancel()">Cancel</button>
        </div>
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc2.MatDialogRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_DIALOG_DATA]
            }] }]; }, null); })();

class LibModule {
    static start(config = { version: '' }) {
        ConfigsService.versionName = config.version;
    }
}
LibModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LibModule });
LibModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LibModule_Factory(t) { return new (t || LibModule)(); }, imports: [[
            CommonModule,
            MatProgressSpinnerModule,
            MatCardModule,
            MatExpansionModule,
            MatDividerModule,
            MatListModule,
            MatProgressBarModule,
            MatToolbarModule,
            MatIconModule,
            MatMenuModule,
            MatButtonModule,
            RouterModule,
            MatFormFieldModule,
            ReactiveFormsModule,
            MatDialogModule,
            MatSelectModule,
            MatBadgeModule,
            MatTooltipModule,
            MatRippleModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LibModule, { declarations: function () { return [DrawerComponent, ToolbarComponent, NoStockDialogComponent, ShopsPipe, OnFetchComponent, SearchInputComponent, BottomBarComponent, DataNotReadyComponent, UploadFilesComponent, DashCardComponent, DialogDeleteComponent, UploadFileProgressComponent, VerifyEMailDialogComponent]; }, imports: function () { return [CommonModule,
        MatProgressSpinnerModule,
        MatCardModule,
        MatExpansionModule,
        MatDividerModule,
        MatListModule,
        MatProgressBarModule,
        MatToolbarModule,
        MatIconModule,
        MatMenuModule,
        MatButtonModule,
        RouterModule,
        MatFormFieldModule,
        ReactiveFormsModule,
        MatDialogModule,
        MatSelectModule,
        MatBadgeModule,
        MatTooltipModule,
        MatRippleModule]; }, exports: function () { return [DrawerComponent, ToolbarComponent, ShopsPipe, OnFetchComponent, BottomBarComponent, DataNotReadyComponent, UploadFilesComponent, DashCardComponent, UploadFileProgressComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LibModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    MatProgressSpinnerModule,
                    MatCardModule,
                    MatExpansionModule,
                    MatDividerModule,
                    MatListModule,
                    MatProgressBarModule,
                    MatToolbarModule,
                    MatIconModule,
                    MatMenuModule,
                    MatButtonModule,
                    RouterModule,
                    MatFormFieldModule,
                    ReactiveFormsModule,
                    MatDialogModule,
                    MatSelectModule,
                    MatBadgeModule,
                    MatTooltipModule,
                    MatRippleModule
                ],
                exports: [
                    DrawerComponent,
                    ToolbarComponent,
                    ShopsPipe,
                    OnFetchComponent,
                    BottomBarComponent,
                    DataNotReadyComponent,
                    UploadFilesComponent,
                    DashCardComponent,
                    UploadFileProgressComponent
                ],
                declarations: [
                    DrawerComponent,
                    ToolbarComponent,
                    NoStockDialogComponent,
                    ShopsPipe,
                    OnFetchComponent,
                    SearchInputComponent,
                    BottomBarComponent,
                    DataNotReadyComponent,
                    UploadFilesComponent,
                    DashCardComponent,
                    DialogDeleteComponent,
                    UploadFileProgressComponent,
                    VerifyEMailDialogComponent
                ]
            }]
    }], null, null); })();

class FileLibraryService {
    constructor(storageService) {
        this.storageService = storageService;
    }
    saveFile(file, progress) {
        return __awaiter(this, void 0, void 0, function* () {
            if (file && file instanceof File) {
                const activeShop = yield this.storageService.getActiveShop();
                return BFast.storage(activeShop === null || activeShop === void 0 ? void 0 : activeShop.projectId).save(file, (data) => {
                    progress((Number(data.loaded) / Number(data.total) * 100));
                });
            }
            else if (file && typeof file === 'string' && file.startsWith('http')) {
                return file;
            }
            else {
                return null;
            }
        });
    }
}
FileLibraryService.ɵfac = function FileLibraryService_Factory(t) { return new (t || FileLibraryService)(ɵngcc0.ɵɵinject(StorageService)); };
FileLibraryService.ɵprov = ɵɵdefineInjectable({ factory: function FileLibraryService_Factory() { return new FileLibraryService(ɵɵinject(StorageService)); }, token: FileLibraryService, providedIn: "any" });
FileLibraryService.ctorParameters = () => [
    { type: StorageService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileLibraryService, [{
        type: Injectable,
        args: [{
                providedIn: 'any'
            }]
    }], function () { return [{ type: StorageService }]; }, null); })();

class MessageService {
    constructor(matSnackBar) {
        this.matSnackBar = matSnackBar;
    }
    showMobileInfoMessage(message, duration = 3000, position = 'top') {
        this.matSnackBar.open(message, 'Ok', {
            horizontalPosition: 'center',
            verticalPosition: position,
            duration
        });
    }
}
MessageService.ɵfac = function MessageService_Factory(t) { return new (t || MessageService)(ɵngcc0.ɵɵinject(ɵngcc20.MatSnackBar)); };
MessageService.ɵprov = ɵɵdefineInjectable({ factory: function MessageService_Factory() { return new MessageService(ɵɵinject(MatSnackBar)); }, token: MessageService, providedIn: "root" });
MessageService.ctorParameters = () => [
    { type: MatSnackBar }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MessageService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc20.MatSnackBar }]; }, null); })();

const toSqlDate = (date) => {
    const year = date.getFullYear();
    let month = (date.getMonth() + 1).toString(10);
    let day = (date.getDate()).toString(10);
    if (month.length === 1) {
        month = '0' + month;
    }
    if (day.length === 1) {
        day = '0' + day;
    }
    return year + '-' + month + '-' + day;
};

class DeviceInfoUtil {
    getWidth() {
        return window.innerWidth;
    }
    enoughWidth() {
        const width = this.getWidth();
        return width > 1000;
    }
    openDrawer(sidenav) {
        sidenav.open().catch();
    }
}

/*
 * Public API Surface of libs
 */

/**
 * Generated bundle index. Do not edit.
 */

export { DeviceInfoUtil, EventService, FileLibraryService, LibModule, LogService, MessageService, NoStockDialogComponent, SecurityUtil, SettingsService, SsmEvents, StorageService, UserService, toSqlDate, DrawerComponent as ɵa, ToolbarComponent as ɵb, ShopsPipe as ɵc, OnFetchComponent as ɵd, BottomBarComponent as ɵe, DataNotReadyComponent as ɵf, UploadFilesComponent as ɵg, DashCardComponent as ɵh, UploadFileProgressComponent as ɵi, SearchInputComponent as ɵj, DialogDeleteComponent as ɵk, VerifyEMailDialogComponent as ɵm };

//# sourceMappingURL=smartstock-core-libs.js.map