import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { BFast } from 'bfastjs';
import { StorageService } from './storage.service';
import * as i0 from "@angular/core";
import * as i1 from "./storage.service";
export class FileLibraryService {
    constructor(storageService) {
        this.storageService = storageService;
    }
    saveFile(file, progress) {
        return __awaiter(this, void 0, void 0, function* () {
            if (file && file instanceof File) {
                const activeShop = yield this.storageService.getActiveShop();
                return BFast.storage(activeShop === null || activeShop === void 0 ? void 0 : activeShop.projectId).save(file, (data) => {
                    progress((Number(data.loaded) / Number(data.total) * 100));
                });
            }
            else if (file && typeof file === 'string' && file.startsWith('http')) {
                return file;
            }
            else {
                return null;
            }
        });
    }
}
FileLibraryService.ɵprov = i0.ɵɵdefineInjectable({ factory: function FileLibraryService_Factory() { return new FileLibraryService(i0.ɵɵinject(i1.StorageService)); }, token: FileLibraryService, providedIn: "any" });
FileLibraryService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'any'
            },] }
];
FileLibraryService.ctorParameters = () => [
    { type: StorageService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1saWJyYXJ5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dhcHBpL1dlYlN0b3JtUHJvamVjdHMvc21hcnRzdG9jay1jb3JlLWxpYnMvcHJvamVjdHMvbGlicy9zcmMvIiwic291cmNlcyI6WyJzZXJ2aWNlcy9maWxlLWxpYnJhcnkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUMsS0FBSyxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBQzlCLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7O0FBS2pELE1BQU0sT0FBTyxrQkFBa0I7SUFDN0IsWUFBNkIsY0FBOEI7UUFBOUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO0lBQzNELENBQUM7SUFFSyxRQUFRLENBQUMsSUFBUyxFQUFFLFFBQXNDOztZQUM5RCxJQUFJLElBQUksSUFBSSxJQUFJLFlBQVksSUFBSSxFQUFFO2dCQUNoQyxNQUFNLFVBQVUsR0FBRyxNQUFNLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQzdELE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLGFBQVYsVUFBVSx1QkFBVixVQUFVLENBQUUsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFO29CQUM5RCxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDN0QsQ0FBQyxDQUFDLENBQUM7YUFDSjtpQkFBTSxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDdEUsT0FBTyxJQUFJLENBQUM7YUFDYjtpQkFBTTtnQkFDTCxPQUFPLElBQUksQ0FBQzthQUNiO1FBQ0gsQ0FBQztLQUFBOzs7O1lBbEJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsS0FBSzthQUNsQjs7O1lBSk8sY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0JGYXN0fSBmcm9tICdiZmFzdGpzJztcbmltcG9ydCB7U3RvcmFnZVNlcnZpY2V9IGZyb20gJy4vc3RvcmFnZS5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAnYW55J1xufSlcbmV4cG9ydCBjbGFzcyBGaWxlTGlicmFyeVNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHN0b3JhZ2VTZXJ2aWNlOiBTdG9yYWdlU2VydmljZSkge1xuICB9XG5cbiAgYXN5bmMgc2F2ZUZpbGUoZmlsZTogYW55LCBwcm9ncmVzczogKHBlcmNlbnRhZ2U6IG51bWJlcikgPT4gdm9pZCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgaWYgKGZpbGUgJiYgZmlsZSBpbnN0YW5jZW9mIEZpbGUpIHtcbiAgICAgIGNvbnN0IGFjdGl2ZVNob3AgPSBhd2FpdCB0aGlzLnN0b3JhZ2VTZXJ2aWNlLmdldEFjdGl2ZVNob3AoKTtcbiAgICAgIHJldHVybiBCRmFzdC5zdG9yYWdlKGFjdGl2ZVNob3A/LnByb2plY3RJZCkuc2F2ZShmaWxlLCAoZGF0YSkgPT4ge1xuICAgICAgICBwcm9ncmVzcygoTnVtYmVyKGRhdGEubG9hZGVkKSAvIE51bWJlcihkYXRhLnRvdGFsKSAqIDEwMCkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChmaWxlICYmIHR5cGVvZiBmaWxlID09PSAnc3RyaW5nJyAmJiBmaWxlLnN0YXJ0c1dpdGgoJ2h0dHAnKSkge1xuICAgICAgcmV0dXJuIGZpbGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxufVxuIl19