import { Component, EventEmitter, Input, Output } from '@angular/core';
export class OnFetchComponent {
    constructor() {
        this.refreshCallback = new EventEmitter();
    }
    ngOnInit() {
    }
    callBack() {
        this.refreshCallback.emit();
    }
}
OnFetchComponent.decorators = [
    { type: Component, args: [{
                selector: 'smartstock-on-fetch',
                template: `
    <div *ngIf="!isLoading" class="no-data-wrapper">
      <img src="/src/assets/img/empty.svg" width="200px" alt="">
      <h4>No Data</h4>
      <button (click)="callBack()" matTooltip="Click to refresh" mat-raised-button mat-icon-button>
        <mat-icon color="accent">
          refresh
        </mat-icon>
      </button>
    </div>

    <div *ngIf="isLoading" class="no-data-wrapper">
      <img src="/src/assets/img/data.svg" width="200px" alt="">
      <h4>Fetching data...</h4>
      <mat-progress-spinner color="accent" mode="indeterminate" [diameter]="30"></mat-progress-spinner>
    </div>
  `,
                styles: [".no-data-wrapper{align-items:center;display:flex;flex-direction:column;justify-content:center;margin-top:48px}.no-data-wrapper>h4{padding:8px}"]
            },] }
];
OnFetchComponent.ctorParameters = () => [];
OnFetchComponent.propDecorators = {
    refreshCallback: [{ type: Output }],
    isLoading: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tZmV0Y2guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93YXBwaS9XZWJTdG9ybVByb2plY3RzL3NtYXJ0c3RvY2stY29yZS1saWJzL3Byb2plY3RzL2xpYnMvc3JjLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9vbi1mZXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQXVCN0UsTUFBTSxPQUFPLGdCQUFnQjtJQUszQjtRQUhVLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUkvQyxDQUFDO0lBRUQsUUFBUTtJQUNSLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM5QixDQUFDOzs7WUFsQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCVDs7YUFFRjs7Ozs4QkFHRSxNQUFNO3dCQUNOLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzbWFydHN0b2NrLW9uLWZldGNoJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2ICpuZ0lmPVwiIWlzTG9hZGluZ1wiIGNsYXNzPVwibm8tZGF0YS13cmFwcGVyXCI+XG4gICAgICA8aW1nIHNyYz1cIi9zcmMvYXNzZXRzL2ltZy9lbXB0eS5zdmdcIiB3aWR0aD1cIjIwMHB4XCIgYWx0PVwiXCI+XG4gICAgICA8aDQ+Tm8gRGF0YTwvaDQ+XG4gICAgICA8YnV0dG9uIChjbGljayk9XCJjYWxsQmFjaygpXCIgbWF0VG9vbHRpcD1cIkNsaWNrIHRvIHJlZnJlc2hcIiBtYXQtcmFpc2VkLWJ1dHRvbiBtYXQtaWNvbi1idXR0b24+XG4gICAgICAgIDxtYXQtaWNvbiBjb2xvcj1cImFjY2VudFwiPlxuICAgICAgICAgIHJlZnJlc2hcbiAgICAgICAgPC9tYXQtaWNvbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiAqbmdJZj1cImlzTG9hZGluZ1wiIGNsYXNzPVwibm8tZGF0YS13cmFwcGVyXCI+XG4gICAgICA8aW1nIHNyYz1cIi9zcmMvYXNzZXRzL2ltZy9kYXRhLnN2Z1wiIHdpZHRoPVwiMjAwcHhcIiBhbHQ9XCJcIj5cbiAgICAgIDxoND5GZXRjaGluZyBkYXRhLi4uPC9oND5cbiAgICAgIDxtYXQtcHJvZ3Jlc3Mtc3Bpbm5lciBjb2xvcj1cImFjY2VudFwiIG1vZGU9XCJpbmRldGVybWluYXRlXCIgW2RpYW1ldGVyXT1cIjMwXCI+PC9tYXQtcHJvZ3Jlc3Mtc3Bpbm5lcj5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJy4uL3N0eWxlcy9vbi1mZXRjaC5zdHlsZS5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgT25GZXRjaENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQE91dHB1dCgpIHJlZnJlc2hDYWxsYmFjayA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQElucHV0KCkgaXNMb2FkaW5nOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBjYWxsQmFjaygpIHtcbiAgICB0aGlzLnJlZnJlc2hDYWxsYmFjay5lbWl0KCk7XG4gIH1cblxufVxuIl19