import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
export class UploadFilesComponent {
    constructor() {
        this.files = [];
        this.uploadFileFormControl = new FormControl([], [Validators.nullValidator, Validators.required]);
    }
    ngOnInit() {
    }
    removeFile($event, i) {
        $event.preventDefault();
        this.files.splice(i, 1);
    }
    uploadFiles($event, uploadFile) {
        return __awaiter(this, void 0, void 0, function* () {
            const files = $event.target['files'];
            if (files.item(0)) {
                const file = files.item(0);
                if (this.files.length === 0) {
                    this.files.push({
                        name: file.name,
                        type: file.type,
                        url: file,
                    });
                }
                else {
                    this.files = this.files.filter(value => file.name !== value.name);
                    this.files.push({
                        name: file.name,
                        type: file.type,
                        url: file
                    });
                }
                this.uploadFileFormControl.setValue(this.files);
                uploadFile.value = '';
            }
        });
    }
}
UploadFilesComponent.decorators = [
    { type: Component, args: [{
                selector: 'smartstock-upload-files',
                template: `
    <div style="display: flex; flex-direction: row; flex-wrap: wrap; align-items: center; padding: 8px">
      <div *ngFor="let file of files; let i =index"
           style="display: flex; flex-direction: row; flex-wrap: nowrap; align-items: center">
        <mat-card style="height: 50px; margin: 5px; display: flex; flex-direction: row; align-items: center">
          <span style="max-width: 200px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis">
            {{file.name}}
          </span>
          <span style="width: 10px"></span>
          <button mat-icon-button style="display: inline-block" (click)="removeFile($event, i)">
            <mat-icon color="warn">delete</mat-icon>
          </button>
        </mat-card>
      </div>
      <mat-card (click)="uploadFile.click()" matRipple style="width: 120px; height: 50px; margin: 5px">
        <mat-icon>attachment</mat-icon>
        <span>Add File</span>
      </mat-card>
    </div>

    <input style="display: none" #uploadFile [multiple]="false" type="file" (change)="uploadFiles($event,uploadFile)">
  `
            },] }
];
UploadFilesComponent.ctorParameters = () => [];
UploadFilesComponent.propDecorators = {
    files: [{ type: Input }],
    uploadFileFormControl: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLWZpbGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2FwcGkvV2ViU3Rvcm1Qcm9qZWN0cy9zbWFydHN0b2NrLWNvcmUtbGlicy9wcm9qZWN0cy9saWJzL3NyYy8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdXBsb2FkLWZpbGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUFDLFdBQVcsRUFBRSxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQTJCdkQsTUFBTSxPQUFPLG9CQUFvQjtJQUkvQjtRQUhTLFVBQUssR0FBZ0QsRUFBRSxDQUFDO1FBQ3hELDBCQUFxQixHQUFnQixJQUFJLFdBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBR25ILENBQUM7SUFFRCxRQUFRO0lBQ1IsQ0FBQztJQUVELFVBQVUsQ0FBQyxNQUFrQixFQUFFLENBQVM7UUFDdEMsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUssV0FBVyxDQUFDLE1BQWEsRUFBRSxVQUE0Qjs7WUFDM0QsTUFBTSxLQUFLLEdBQWEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMvQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ2pCLE1BQU0sSUFBSSxHQUFTLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO29CQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzt3QkFDZCxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7d0JBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO3dCQUNmLEdBQUcsRUFBRSxJQUFJO3FCQUNWLENBQUMsQ0FBQztpQkFDSjtxQkFBTTtvQkFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ2xFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO3dCQUNkLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTt3QkFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7d0JBQ2YsR0FBRyxFQUFFLElBQUk7cUJBQ1YsQ0FBQyxDQUFDO2lCQUNKO2dCQUNELElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNoRCxVQUFVLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQzthQUN2QjtRQUNILENBQUM7S0FBQTs7O1lBN0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCVDthQUNGOzs7O29CQUVFLEtBQUs7b0NBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUNvbnRyb2wsIFZhbGlkYXRvcnN9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc21hcnRzdG9jay11cGxvYWQtZmlsZXMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgc3R5bGU9XCJkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogcm93OyBmbGV4LXdyYXA6IHdyYXA7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IHBhZGRpbmc6IDhweFwiPlxuICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgZmlsZSBvZiBmaWxlczsgbGV0IGkgPWluZGV4XCJcbiAgICAgICAgICAgc3R5bGU9XCJkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogcm93OyBmbGV4LXdyYXA6IG5vd3JhcDsgYWxpZ24taXRlbXM6IGNlbnRlclwiPlxuICAgICAgICA8bWF0LWNhcmQgc3R5bGU9XCJoZWlnaHQ6IDUwcHg7IG1hcmdpbjogNXB4OyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogcm93OyBhbGlnbi1pdGVtczogY2VudGVyXCI+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9XCJtYXgtd2lkdGg6IDIwMHB4OyBvdmVyZmxvdzogaGlkZGVuOyB3aGl0ZS1zcGFjZTogbm93cmFwOyB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpc1wiPlxuICAgICAgICAgICAge3tmaWxlLm5hbWV9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBzdHlsZT1cIndpZHRoOiAxMHB4XCI+PC9zcGFuPlxuICAgICAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrXCIgKGNsaWNrKT1cInJlbW92ZUZpbGUoJGV2ZW50LCBpKVwiPlxuICAgICAgICAgICAgPG1hdC1pY29uIGNvbG9yPVwid2FyblwiPmRlbGV0ZTwvbWF0LWljb24+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvbWF0LWNhcmQ+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxtYXQtY2FyZCAoY2xpY2spPVwidXBsb2FkRmlsZS5jbGljaygpXCIgbWF0UmlwcGxlIHN0eWxlPVwid2lkdGg6IDEyMHB4OyBoZWlnaHQ6IDUwcHg7IG1hcmdpbjogNXB4XCI+XG4gICAgICAgIDxtYXQtaWNvbj5hdHRhY2htZW50PC9tYXQtaWNvbj5cbiAgICAgICAgPHNwYW4+QWRkIEZpbGU8L3NwYW4+XG4gICAgICA8L21hdC1jYXJkPlxuICAgIDwvZGl2PlxuXG4gICAgPGlucHV0IHN0eWxlPVwiZGlzcGxheTogbm9uZVwiICN1cGxvYWRGaWxlIFttdWx0aXBsZV09XCJmYWxzZVwiIHR5cGU9XCJmaWxlXCIgKGNoYW5nZSk9XCJ1cGxvYWRGaWxlcygkZXZlbnQsdXBsb2FkRmlsZSlcIj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgVXBsb2FkRmlsZXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBmaWxlczogeyBuYW1lOiBzdHJpbmcsIHR5cGU6IHN0cmluZywgdXJsOiBGaWxlIH1bXSA9IFtdO1xuICBASW5wdXQoKSB1cGxvYWRGaWxlRm9ybUNvbnRyb2w6IEZvcm1Db250cm9sID0gbmV3IEZvcm1Db250cm9sKFtdLCBbVmFsaWRhdG9ycy5udWxsVmFsaWRhdG9yLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIHJlbW92ZUZpbGUoJGV2ZW50OiBNb3VzZUV2ZW50LCBpOiBudW1iZXIpIHtcbiAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLmZpbGVzLnNwbGljZShpLCAxKTtcbiAgfVxuXG4gIGFzeW5jIHVwbG9hZEZpbGVzKCRldmVudDogRXZlbnQsIHVwbG9hZEZpbGU6IEhUTUxJbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBmaWxlczogRmlsZUxpc3QgPSAkZXZlbnQudGFyZ2V0WydmaWxlcyddO1xuICAgIGlmIChmaWxlcy5pdGVtKDApKSB7XG4gICAgICBjb25zdCBmaWxlOiBGaWxlID0gZmlsZXMuaXRlbSgwKTtcbiAgICAgIGlmICh0aGlzLmZpbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aGlzLmZpbGVzLnB1c2goe1xuICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICB0eXBlOiBmaWxlLnR5cGUsXG4gICAgICAgICAgdXJsOiBmaWxlLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZmlsZXMgPSB0aGlzLmZpbGVzLmZpbHRlcih2YWx1ZSA9PiBmaWxlLm5hbWUgIT09IHZhbHVlLm5hbWUpO1xuICAgICAgICB0aGlzLmZpbGVzLnB1c2goe1xuICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICB0eXBlOiBmaWxlLnR5cGUsXG4gICAgICAgICAgdXJsOiBmaWxlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgdGhpcy51cGxvYWRGaWxlRm9ybUNvbnRyb2wuc2V0VmFsdWUodGhpcy5maWxlcyk7XG4gICAgICB1cGxvYWRGaWxlLnZhbHVlID0gJyc7XG4gICAgfVxuICB9XG5cbiAgLy8gcHJpdmF0ZSBhc3luYyByZWFkRmlsZUNvbnRlbnQoZmlsZTogRmlsZSk6IFByb21pc2U8c3RyaW5nPiB7XG4gIC8vICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgLy8gICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAvLyAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBldiA9PiB7XG4gIC8vICAgICAgIHJlc29sdmUoZXYudGFyZ2V0LnJlc3VsdC50b1N0cmluZygpKTtcbiAgLy8gICAgIH07XG4gIC8vICAgICBmaWxlUmVhZGVyLm9uZXJyb3IgPSBfID0+IHtcbiAgLy8gICAgICAgcmVqZWN0KCdGYWlscyB0byByZWFkIGZpbGUnKTtcbiAgLy8gICAgIH07XG4gIC8vICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gIC8vICAgfSk7XG4gIC8vIH1cblxufVxuIl19