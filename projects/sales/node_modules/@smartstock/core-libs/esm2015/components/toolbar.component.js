import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Router } from '@angular/router';
import { FormControl } from '@angular/forms';
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { StorageService } from '../services/storage.service';
import { UserService } from '../services/user.service';
import { SsmEvents } from '../utils/eventsNames.util';
import { EventService } from '../services/event.service';
export class ToolbarComponent {
    constructor(router, storage, userDatabase, eventService) {
        this.router = router;
        this.storage = storage;
        this.userDatabase = userDatabase;
        this.eventService = eventService;
        this.showProgress = false;
        this.hasBackRoute = false;
        this.showSearch = false;
        this.searchCallback = new EventEmitter();
        this.searchInputControl = new FormControl('');
        this.searchProgressFlag = false;
        this.isMobile = false; // environment.android;
    }
    ngOnInit() {
        this.storage.getActiveUser().then(user => {
            this.currentUser = user;
        });
        this.searchInputControl.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe(_ => {
            this.searchCallback.emit(this.searchInputControl.value);
        });
        this.getProductsInCart();
        this._clearSearchInputListener();
    }
    getProductsInCart() {
        this.eventService.listen(SsmEvents.NO_OF_CART, (data) => {
            this.noOfProductsInCart = data.detail;
        });
    }
    logout() {
        this.userDatabase.logout(null).finally(() => {
            return this.router.navigateByUrl('');
        }).catch(err => console.log(''));
    }
    _clearSearchInputListener() {
        // this.eventService.listen(SsmEvents.ADD_CART, data => {
        //   this.searchInputControl.reset('');
        // });
    }
}
ToolbarComponent.decorators = [
    { type: Component, args: [{
                selector: 'smartstock-toolbar',
                template: `
    <mat-toolbar color="primary" class="sticky-top mat-elevation-z4">
      <mat-toolbar-row>
<!--        <button routerLink="{{backLink}}" *ngIf="hasBackRoute && backLink" mat-icon-button>-->
<!--          <mat-icon>arrow_back</mat-icon>-->
<!--        </button>-->
        <button mat-icon-button (click)="sidenav.toggle()">
          <mat-icon>menu</mat-icon>
        </button>
        <span>{{heading}}</span>
        <span *ngIf="isMobile" style="flex: 1 1 auto"></span>
        <span *ngIf="!isMobile && showSearch" style="width: 16px"></span>
        <span *ngIf="!isMobile && !showSearch" style="flex: 1 1 auto"></span>
        <smartstock-search-input [searchProgressFlag]="searchProgressFlag"
                          *ngIf="!isMobile && showSearch" style="flex: 1 1 auto"
                          [showSearch]="showSearch"
                          [searchInputControl]="searchInputControl"
                          [searchPlaceholder]="searchPlaceholder">
        </smartstock-search-input>
        <span *ngIf="!isMobile && showSearch" style="width: 16px"></span>
        <button *ngIf="noOfProductsInCart> 0 && !isMobile" mat-icon-button (click)="cartdrawer.toggle()"
                [matBadge]="noOfProductsInCart">
          <mat-icon>shopping_cart</mat-icon>
        </button>
        <button *ngIf="!isMobile" class="ft-button" mat-button [matMenuTriggerFor]="menu">
          <mat-icon>account_circle</mat-icon>
          <span *ngIf="currentUser">{{"  " + currentUser.username}}</span>
        </button>
        <button *ngIf="isMobile" mat-icon-button [matMenuTriggerFor]="menu">
          <mat-icon>more_vert</mat-icon>
          <!--      <span *ngIf="currentUser">{{"  " + currentUser.username}}</span>-->
        </button>
        <mat-menu #menu>
          <button mat-menu-item (click)="logout()">
            <mat-icon>exit_to_app</mat-icon>
            Logout
          </button>
          <button mat-menu-item routerLink="/account/profile">
            <mat-icon>person</mat-icon>
            My Profile
          </button>
        </mat-menu>
      </mat-toolbar-row>

      <mat-toolbar-row *ngIf="isMobile && showSearch">
        <!--    <span style="flex-grow: 1"></span>-->
        <smartstock-search-input [searchProgressFlag]="searchProgressFlag"
                          style="flex: 1 1 auto"
                          [showSearch]="showSearch"
                          [searchInputControl]="searchInputControl"
                          [searchPlaceholder]="searchPlaceholder">
        </smartstock-search-input>
        <!--    <span style="flex-grow: 1"></span>-->
      </mat-toolbar-row>
    </mat-toolbar>
  `
            },] }
];
ToolbarComponent.ctorParameters = () => [
    { type: Router },
    { type: StorageService },
    { type: UserService },
    { type: EventService }
];
ToolbarComponent.propDecorators = {
    heading: [{ type: Input }],
    showProgress: [{ type: Input }],
    sidenav: [{ type: Input }],
    hasBackRoute: [{ type: Input }],
    backLink: [{ type: Input }],
    cartdrawer: [{ type: Input }],
    showSearch: [{ type: Input }],
    searchCallback: [{ type: Output }],
    searchInputControl: [{ type: Input }],
    searchPlaceholder: [{ type: Input }],
    searchProgressFlag: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,