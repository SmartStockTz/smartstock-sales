{"version":3,"file":"storage.service.d.ts","sources":["storage.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { EventService } from './event.service';\nimport { CacheController } from 'bfastjs/dist/controllers/CacheController';\nimport { UserModel } from '../models/user.model';\nimport { ShopModel } from '../models/shop.model';\nimport { CustomerModel } from '../models/customer.model';\nimport { StockModel } from '../models/stock.model';\nimport { BatchModel } from '../models/batch.model';\nexport declare class StorageService {\n    private readonly eventApi;\n    smartStockCache: CacheController;\n    constructor(eventApi: EventService);\n    getActiveUser(): Promise<UserModel>;\n    saveSales(batchs: BatchModel[]): Promise<any>;\n    getActiveShop(): Promise<ShopModel>;\n    saveActiveShop(shop: ShopModel): Promise<any>;\n    getCurrentProjectId(): Promise<string>;\n    saveCurrentProjectId(projectId: string): Promise<any>;\n    clearSmartStockCache(): Promise<any>;\n    saveActiveUser(user: UserModel): Promise<any>;\n    removeActiveShop(): Promise<any>;\n    removeActiveUser(): Promise<any>;\n    removeStocks(): Promise<any>;\n    getStocks(): Promise<StockModel[]>;\n    saveStocks(stocks: StockModel[]): Promise<any>;\n    saveStock(stock: StockModel): Promise<StockModel>;\n    getCustomers(): Promise<CustomerModel[]>;\n    saveCustomer(customer: CustomerModel): Promise<CustomerModel>;\n}\n"]}