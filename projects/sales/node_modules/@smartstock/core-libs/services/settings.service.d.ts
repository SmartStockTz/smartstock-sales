import { HttpClient } from '@angular/common/http';
import { StorageService } from './storage.service';
import * as ɵngcc0 from '@angular/core';
export declare class SettingsService {
    private readonly httpClient;
    private readonly storageService;
    private readonly indexDb;
    ssmServerURL: string;
    ssmFunctionsURL: string;
    ssmHeader: {
        'X-Parse-Application-Id': string;
    };
    ssmFunctionsHeader: {
        'bfast-application-id': string;
        'content-type': string;
    };
    constructor(httpClient: HttpClient, storageService: StorageService, indexDb: StorageService);
    getSSMUserHeader(): Promise<any>;
    getCustomerApplicationId(): Promise<string>;
    getCustomerServerURLId(): Promise<string>;
    getCustomerHeader(): Promise<any>;
    getCustomerPostHeader(contentType?: string): Promise<any>;
    getCustomerServerURL(): Promise<string>;
    getCustomerProjectId(): Promise<string>;
    /**
     * @deprecated
     */
    getPrinterAddress(callback: (value: {
        ip: string;
        name: string;
    }) => void): void;
    saveSettings(settings: any): Promise<any>;
    getSettings(): Promise<{
        printerFooter: string;
        printerHeader: string;
        saleWithoutPrinter: boolean;
        allowRetail: boolean;
        allowWholesale: boolean;
    }>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SettingsService, never>;
}

//# sourceMappingURL=settings.service.d.ts.map