{"version":3,"file":"settings.service.d.ts","sources":["settings.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nexport declare class SettingsService {\n    private readonly httpClient;\n    private readonly storageService;\n    private readonly indexDb;\n    ssmServerURL: string;\n    ssmFunctionsURL: string;\n    ssmHeader: {\n        'X-Parse-Application-Id': string;\n    };\n    ssmFunctionsHeader: {\n        'bfast-application-id': string;\n        'content-type': string;\n    };\n    constructor(httpClient: HttpClient, storageService: StorageService, indexDb: StorageService);\n    getSSMUserHeader(): Promise<any>;\n    getCustomerApplicationId(): Promise<string>;\n    getCustomerServerURLId(): Promise<string>;\n    getCustomerHeader(): Promise<any>;\n    getCustomerPostHeader(contentType?: string): Promise<any>;\n    getCustomerServerURL(): Promise<string>;\n    getCustomerProjectId(): Promise<string>;\n    /**\n     * @deprecated\n     */\n    getPrinterAddress(callback: (value: {\n        ip: string;\n        name: string;\n    }) => void): void;\n    saveSettings(settings: any): Promise<any>;\n    getSettings(): Promise<{\n        printerFooter: string;\n        printerHeader: string;\n        saleWithoutPrinter: boolean;\n        allowRetail: boolean;\n        allowWholesale: boolean;\n    }>;\n}\n"]}