{"version":3,"sources":["../../../projects/libs/src/services/event.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/libs/src/services/log.service.ts","../../../projects/libs/src/utils/security.util.ts","../../../projects/libs/src/utils/eventsNames.util.ts","../../../projects/libs/src/services/storage.service.ts","../../../projects/libs/src/services/settings.service.ts","../../../projects/libs/src/components/verify-email-dialog.component.ts","../../../projects/libs/src/services/user.service.ts","../../../projects/libs/src/services/configs.service.ts","../../../projects/libs/src/components/drawer.component.ts","../../../projects/libs/src/components/toolbar.component.ts","../../../projects/libs/src/components/no-stock-dialog.component.ts","../../../projects/libs/src/pipes/shops.pipe.ts","../../../projects/libs/src/components/on-fetch.component.ts","../../../projects/libs/src/components/search-input.component.ts","../../../projects/libs/src/components/bottom-bar.component.ts","../../../projects/libs/src/components/data-not-ready.component.ts","../../../projects/libs/src/components/upload-files.component.ts","../../../projects/libs/src/components/dash-card.component.ts","../../../projects/libs/src/components/upload-file-progress.component.ts","../../../projects/libs/src/components/delete-dialog.component.ts","../../../projects/libs/src/lib.module.ts","../../../projects/libs/src/services/file-library.service.ts","../../../projects/libs/src/services/message.service.ts","../../../projects/libs/src/utils/device-info.util.ts","../../../projects/libs/src/utils/date.util.ts"],"names":["EventService","prototype","broadcast","eventName","data","cE","CustomEvent","detail","window","dispatchEvent","listen","handler","addEventListener","unListen","removeEventListener","Injectable","args","providedIn","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","__values","o","s","m","i","LogService","message","tag","debug","console","log","error","w","warn","SecurityUtil","generateUUID","uuid.v4","randomString","characters","charactersLength","charAt","Math","floor","random","SsmEvents","ACTIVE_SHOP_SET","ACTIVE_SHOP_REMOVE","SETTINGS_UPDATED","STOCK_UPDATED","ADD_CART","NO_OF_CART","CART_ITEMS","StorageService","eventApi","smartStockCache","BFast","cache","database","collection","getActiveUser","auth","currentUser","_a","saveSales","batchs","getActiveShop","activeShop","projectId","set","dtl","get","response","saveActiveShop","shop","getCurrentProjectId","saveCurrentProjectId","clearSmartStockCache","clearAll","saveActiveUser","user","setCurrentUser","removeActiveShop","undefined","removeActiveUser","removeStocks","getStocks","saveStocks","stocks","saveStock","stock","getCustomers","_d","customersCache","keys","customersKey","customers","customersKey_1","customersKey_1_1","key","_b","saveCustomer","customer","displayName","SettingsService","httpClient","storageService","indexDb","ssmServerURL","ssmFunctionsURL","ssmHeader","X-Parse-Application-Id","ssmFunctionsHeader","bfast-application-id","content-type","getSSMUserHeader","Error","sessionToken","applicationId","X-Parse-Session-Token","Content-Type","getCustomerApplicationId","reason","toString","getCustomerServerURLId","projectUrlId","getCustomerHeader","_c","e_3","getCustomerPostHeader","contentType","getCustomerServerURL","getCustomerProjectId","getPrinterAddress","callback","saveSettings","settings","_this","activeShop_1","put","headers","subscribe","_1","catch","e_7","getSettings","printerFooter","printerHeader","saleWithoutPrinter","allowRetail","allowWholesale","HttpClient","dialogRef","Component","template","MatDialogRef","UserService","settingsService","dialog","logger","role","verified","deleteUser","functions","request","id","delete","context","_e","admin","_f","getAllUser","pagination","query","equalTo","includesIn","size","skip","find","useMasterKey","getUser","login","logIn","username","password","authUser","post","open","VerifyEMailDialogComponent","closeOnNavigation","disableClose","code","err","logout","logOut","register","shops","e_1","resetPassword","encodeURIComponent","refreshToken","addUser","shops1","filter","businessName","getShops","shops_1","forEach","element","street","country","region","getCurrentShop","saveCurrentShop","createShop","deleteShop","updatePassword","updateUser","error1","updateCurrentUser","changePasswordFromOld","lastPassword","MatDialog","ConfigsService","versionName","DrawerComponent","userService","versionNumber","of","selectedMenu","background","borderTopRightRadius","borderBottomRightRadius","color","ngOnInit","shouldExpand","route","URL","location","href","pathname","startsWith","isManager","isAdmin","selector","Input","ToolbarComponent","router","storage","userDatabase","eventService","showProgress","hasBackRoute","showSearch","searchCallback","EventEmitter","searchInputControl","FormControl","searchProgressFlag","isMobile","valueChanges","pipe","debounceTime","distinctUntilChanged","emit","getProductsInCart","_clearSearchInputListener","noOfProductsInCart","finally","navigateByUrl","Router","Output","NoStockDialogComponent","Inject","MAT_DIALOG_DATA","ShopsPipe","userApi","transform","_i","arguments","map","Pipe","name","OnFetchComponent","refreshCallback","callBack","SearchInputComponent","searchPlaceholder","BottomBarComponent","activeNav","DataNotReadyComponent","width","height","isLoading","UploadFilesComponent","files","uploadFileFormControl","Validators","nullValidator","required","removeFile","$event","preventDefault","splice","uploadFiles","uploadFile","target","item","file_1","type","url","setValue","DashCardComponent","title","description","goTo","reportLink","UploadFileProgressComponent","onUploadFlag","uploadPercentage","DialogDeleteComponent","close","cancel","LibModule","start","config","version","NgModule","imports","CommonModule","MatProgressSpinnerModule","MatCardModule","MatExpansionModule","MatDividerModule","MatListModule","MatProgressBarModule","MatToolbarModule","MatIconModule","MatMenuModule","MatButtonModule","RouterModule","MatFormFieldModule","ReactiveFormsModule","MatDialogModule","MatSelectModule","MatBadgeModule","MatTooltipModule","MatRippleModule","exports","declarations","FileLibraryService","saveFile","file","progress","File","save","Number","loaded","total","MessageService","matSnackBar","showMobileInfoMessage","duration","position","horizontalPosition","verticalPosition","MatSnackBar","DeviceInfoUtil","getWidth","innerWidth","enoughWidth","openDrawer","sidenav","date","year","getFullYear","month","getMonth","day","getDate"],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  constructor() {\n  }\n\n  broadcast(eventName: string, data?: any): void {\n    const cE = new CustomEvent(eventName, {\n      detail: data\n    });\n    window.dispatchEvent(cE);\n  }\n\n  listen(eventName: string, handler: (data: any) => void): void {\n    window.addEventListener(eventName, handler);\n  }\n\n  unListen(eventName: string, handler?: (data: any) => void): void {\n    window.removeEventListener(eventName, handler);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n\n  constructor() {\n  }\n\n  i(message: any, tag?: string, debug = false): void {\n    if (debug) {\n      console.log(tag, message);\n    }\n  }\n\n  e(message: any, tag?: string, debug = false): void {\n    if (debug) {\n      console.error(tag, message);\n    }\n  }\n\n  w(message: any, tag?: string, debug = false): void {\n    if (debug) {\n      console.warn(tag, message);\n    }\n  }\n}\n","import * as uuid from 'uuid';\n\nexport class SecurityUtil {\n  static generateUUID(): string {\n    return uuid.v4();\n  }\n  static randomString(length) {\n    let result           = '';\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n}\n\n","export const SsmEvents = {\n  ACTIVE_SHOP_SET: '_ssm_active_shop_set_',\n  ACTIVE_SHOP_REMOVE: '_ssm_active_shop_removed_',\n  SETTINGS_UPDATED: '_ssm_settings_updated_',\n  STOCK_UPDATED: '_ssm_stock_updated_',\n  ADD_CART: 'add_cart',\n  NO_OF_CART: 'noofProductsCart',\n  CART_ITEMS: '_cart_items_'\n};\n","import {Injectable} from '@angular/core';\nimport {EventService} from './event.service';\nimport {BFast} from 'bfastjs';\nimport {SecurityUtil} from '../utils/security.util';\nimport {SsmEvents} from '../utils/eventsNames.util';\nimport {CacheController} from 'bfastjs/dist/controllers/CacheController';\nimport {UserModel} from '../models/user.model';\nimport {ShopModel} from '../models/shop.model';\nimport {CustomerModel} from '../models/customer.model';\nimport {StockModel} from '../models/stock.model';\nimport {BatchModel} from '../models/batch.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  smartStockCache: CacheController = BFast.cache({database: 'smartstock', collection: 'config'});\n\n  constructor(private readonly eventApi: EventService) {\n  }\n\n  async getActiveUser(): Promise<UserModel> {\n    return await BFast.auth().currentUser();\n  }\n\n  async saveSales(batchs: BatchModel[]): Promise<any> {\n    const activeShop = await this.getActiveShop();\n    await BFast.cache({database: 'sales', collection: activeShop.projectId})\n      .set<BatchModel[]>(SecurityUtil.randomString(12), batchs, {\n        dtl: 720\n      });\n  }\n\n  async getActiveShop(): Promise<ShopModel> {\n    const response = await this.smartStockCache.get<ShopModel>('activeShop');\n    if (response) {\n      return response;\n    } else {\n      throw {message: 'No Active Shop'};\n    }\n  }\n\n  async saveActiveShop(shop: ShopModel): Promise<any> {\n    const response = await this.smartStockCache.set<ShopModel>('activeShop', shop, {\n      dtl: 7\n    });\n    this.eventApi.broadcast(SsmEvents.ACTIVE_SHOP_SET);\n    return response;\n  }\n\n  async getCurrentProjectId(): Promise<string> {\n    return await this.smartStockCache.get<string>('cPID');\n  }\n\n  async saveCurrentProjectId(projectId: string): Promise<any> {\n    return await this.smartStockCache.set<string>('cPID', projectId, {\n      dtl: 7\n    });\n  }\n\n  async clearSmartStockCache(): Promise<any> {\n    return await this.smartStockCache.clearAll();\n  }\n\n  async saveActiveUser(user: UserModel): Promise<any> {\n    return BFast.auth().setCurrentUser(user, 6);\n  }\n\n  async removeActiveShop(): Promise<any> {\n    const response = await this.smartStockCache.set('activeShop', undefined);\n    this.eventApi.broadcast(SsmEvents.ACTIVE_SHOP_REMOVE);\n    return response;\n  }\n\n  async removeActiveUser(): Promise<any> {\n    return await BFast.auth().setCurrentUser(undefined, 0);\n  }\n\n  async removeStocks(): Promise<any> {\n    const shop = await this.getActiveShop();\n    return await BFast.cache({database: 'stocks', collection: shop.projectId}).clearAll();\n  }\n\n  async getStocks(): Promise<StockModel[]> {\n    const shop = await this.getActiveShop();\n    const stocksCache = BFast.cache({database: 'stocks', collection: shop.projectId});\n    return await stocksCache.get<StockModel[]>('all');\n  }\n\n  async saveStocks(stocks: StockModel[]): Promise<any> {\n    const shop = await this.getActiveShop();\n    const stocksCache = BFast.cache({database: 'stocks', collection: shop.projectId});\n    return await stocksCache.set('all', stocks, {\n      dtl: 360\n    });\n  }\n\n  async saveStock(stock: StockModel): Promise<StockModel> {\n    // const shop = await this.getActiveShop();\n    // const stocksCache = BFast.cache({database: 'stocks', collection: shop.projectId});\n    // return stocksCache.set(stock.id, stock);\n    return undefined;\n  }\n\n  async getCustomers(): Promise<CustomerModel[]> {\n    const shop = await this.getActiveShop();\n    const customersCache = BFast.cache({database: 'customers', collection: shop.projectId});\n    const customersKey = await customersCache.keys();\n    const customers = [];\n    for (const key of customersKey) {\n      customers.push(await customersCache.get<CustomerModel>(key));\n    }\n    return customers;\n  }\n\n  async saveCustomer(customer: CustomerModel): Promise<CustomerModel> {\n    const shop = await this.getActiveShop();\n    const customersCache = BFast.cache({database: 'customers', collection: shop.projectId});\n    return await customersCache.set<CustomerModel>(customer.displayName, customer, {\n      dtl: 360\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {StorageService} from './storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  ssmServerURL = 'https://smartstock-daas.bfast.fahamutech.com'; // environment.smartstock.databaseURL;\n  ssmFunctionsURL = 'https://smartstock-faas.bfast.fahamutech.com'; // environment.smartstock.functionsURL;\n  ssmHeader = {\n    'X-Parse-Application-Id': 'smartstock'\n  };\n  ssmFunctionsHeader = {\n    'bfast-application-id': 'smartstock',\n    'content-type': 'application/json'\n  };\n\n  constructor(private readonly httpClient: HttpClient,\n              private readonly storageService: StorageService,\n              private readonly indexDb: StorageService) {\n  }\n\n  async getSSMUserHeader(): Promise<any> {\n    try {\n      const user = await this.storageService.getActiveUser();\n      const activeShop = await this.storageService.getActiveShop();\n      if (!user) {\n        // console.log('no user records found');\n        throw new Error('no user records found');\n      }\n      if (user && user.sessionToken && activeShop && activeShop.applicationId) {\n        return {\n          'X-Parse-Application-Id': 'smartstock',\n          'X-Parse-Session-Token': user.sessionToken,\n          'Content-Type': 'application/json'\n        };\n      } else {\n        throw new Error('token not found');\n      }\n    } catch (e) {\n      throw {message: 'Fails to get user, so to retrieve token'};\n    }\n  }\n\n  async getCustomerApplicationId() {\n    try {\n      const activeShop = await this.storageService.getActiveShop();\n      if (!activeShop) {\n        throw new Error('No user record');\n      }\n      return activeShop.applicationId;\n    } catch (e) {\n      throw {message: 'Fails to get application id', reason: e.toString()};\n    }\n  }\n\n  async getCustomerServerURLId() {\n    try {\n      const activeShop = await this.storageService.getActiveShop();\n      if (!activeShop) {\n        throw new Error('No user in local storage');\n      }\n      return activeShop.projectUrlId;\n    } catch (reason) {\n      throw {message: 'Fails to get user', reason: reason.toString()};\n    }\n  }\n\n  async getCustomerHeader(): Promise<any> {\n    try {\n      return {\n        'X-Parse-Application-Id': await this.getCustomerApplicationId()\n      };\n    } catch (e) {\n      console.warn(e);\n      return {};\n    }\n  }\n\n  async getCustomerPostHeader(contentType?: string): Promise<any> {\n    try {\n      return {\n        'X-Parse-Application-Id': await this.getCustomerApplicationId(),\n        'content-type': contentType ? contentType : 'application/json'\n      };\n    } catch (e) {\n      throw {message: 'Fails to get customer post header', reason: e.toString()};\n    }\n  }\n\n  async getCustomerServerURL(): Promise<string> {\n    try {\n      return `https://${await this.getCustomerServerURLId()}.bfast.fahamutech.com`;\n    } catch (e) {\n      throw {message: 'Fails to get server url', reason: e.toString()};\n    }\n  }\n\n  async getCustomerProjectId(): Promise<string> {\n    try {\n      const activeShop = await this.indexDb.getActiveShop();\n      if (!activeShop) {\n        throw new Error('No user in local storage');\n      }\n      return activeShop.projectId;\n    } catch (e) {\n      throw {message: 'Fails to get project id', reason: e.toString()};\n    }\n  }\n\n  /**\n   * @deprecated\n   */\n  public getPrinterAddress(callback: (value: { ip: string, name: string }) => void) {\n    // this.indexDb.getItem<{ ip: string, name: string }>('printerAddress').then(value => {\n    //   callback(null);\n    // }).catch(reason => {\n    //   console.log(reason);\n    //   callback(null);\n    // });\n    callback(null);\n  }\n\n  saveSettings(settings: any): Promise<any> {\n    return new Promise<any>(async (resolve, reject) => {\n      try {\n        const activeShop = await this.storageService.getActiveShop();\n        this.httpClient.put<any>(this.ssmFunctionsURL + '/settings/' + activeShop.projectId, settings, {\n          headers: this.ssmFunctionsHeader\n        }).subscribe(_ => {\n          activeShop.settings = _.settings;\n          this.storageService.saveActiveShop(activeShop).then(_1 => {\n            resolve('Shop settings updated');\n          }).catch(reason => {\n            reject(reason);\n          });\n        }, error => {\n          reject(error);\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  async getSettings(): Promise<{\n    printerFooter: string, printerHeader: string, saleWithoutPrinter: boolean,\n    allowRetail: boolean, allowWholesale: boolean\n  }> {\n    try {\n      const activeShop = await this.storageService.getActiveShop();\n      if (!activeShop || !activeShop.settings) {\n        return {\n          printerFooter: 'Thank you',\n          printerHeader: '',\n          saleWithoutPrinter: true,\n          allowRetail: true,\n          allowWholesale: true,\n        };\n      }\n      return activeShop.settings;\n    } catch (e) {\n      throw {message: 'Fails to get settings', reason: e.toString()};\n    }\n  }\n}\n","import {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  template: `\n    <div>\n      <div mat-dialog-title>Account Verification</div>\n      <div mat-dialog-content>\n        <p>\n          Your email is not verified we send a link to the email\n          <br>\n          you use when open account for you to verify your account\n        </p>\n      </div>\n      <div mat-dialog-actions>\n        <button (click)=\"dialogRef.close()\" mat-button color=\"primary\">Close</button>\n      </div>\n    </div>\n  `,\n})\nexport class VerifyEMailDialogComponent {\n  constructor(public readonly dialogRef: MatDialogRef<VerifyEMailDialogComponent>) {\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {HttpClient} from '@angular/common/http';\nimport {BFast} from 'bfastjs';\nimport {LogService} from './log.service';\nimport {StorageService} from './storage.service';\nimport {ShopModel} from '../models/shop.model';\nimport {UserModel} from '../models/user.model';\nimport {SettingsService} from './settings.service';\nimport {VerifyEMailDialogComponent} from '../components/verify-email-dialog.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n\n  constructor(private readonly httpClient: HttpClient,\n              private readonly settingsService: SettingsService,\n              private readonly dialog: MatDialog,\n              private readonly logger: LogService,\n              private readonly storageService: StorageService) {\n  }\n\n  async currentUser(): Promise<any> {\n    const user = await BFast.auth().currentUser();\n    if (user && user.role !== 'admin') {\n      return user;\n    } else if (user && user.verified === true) {\n      return user;\n    } else {\n      return await BFast.auth().setCurrentUser(undefined);\n    }\n  }\n\n  async deleteUser(user: any): Promise<any> {\n    return BFast.functions()\n      .request('/functions/users/' + user.id)\n      .delete({\n        data: {context: {admin: await BFast.auth().currentUser()}}\n      });\n  }\n\n  async getAllUser(pagination: { size: number, skip: number }): Promise<UserModel[]> {\n    const projectId = await this.settingsService.getCustomerProjectId();\n    return BFast.database().collection('_User')\n      .query()\n      .equalTo('projectId', projectId)\n      .includesIn('role', ['user', 'manager'])\n      .size(pagination.size)\n      .skip(pagination.skip)\n      .find<UserModel[]>({\n        useMasterKey: true\n      });\n  }\n\n  getUser(user: UserModel, callback?: (user: UserModel) => void): void {\n\n  }\n\n  async login(user: { username: string, password: string }): Promise<UserModel> {\n    const authUser = await BFast.auth().logIn<UserModel>(user.username, user.password);\n    await this.storageService.removeActiveShop();\n    if (authUser && authUser.role !== 'admin') {\n      await this.storageService.saveActiveUser(authUser);\n      return authUser;\n    } else if (authUser && authUser.verified === true) {\n      await this.storageService.saveActiveUser(authUser);\n      return authUser;\n    } else {\n      await BFast.functions().request('/functions/users/reVerifyAccount/' + user.username).post();\n      this.dialog.open(VerifyEMailDialogComponent, {\n        closeOnNavigation: true,\n        disableClose: true\n      });\n      throw {code: 403, err: 'account not verified'};\n    }\n  }\n\n  async logout(user: UserModel) {\n    await BFast.auth().logOut();\n    await this.storageService.removeActiveUser();\n    await this.storageService.removeActiveShop();\n    return;\n  }\n\n  async register(user: UserModel): Promise<UserModel> {\n    try {\n      user.settings = {\n        printerFooter: 'Thank you',\n        printerHeader: '',\n        saleWithoutPrinter: true,\n        allowRetail: true,\n        allowWholesale: true\n      };\n      user.shops = [];\n      await this.storageService.removeActiveShop();\n      return await BFast.functions().request('/functions/users/create').post(user, {\n        headers: this.settingsService.ssmFunctionsHeader\n      });\n    } catch (e) {\n      if (e && e.response && e.response.data) {\n        throw e.response.data;\n      } else {\n        throw e.toString();\n      }\n    }\n  }\n\n  resetPassword(username: string): Promise<any> {\n    return BFast.functions().request('/functions/users/resetPassword/' + encodeURIComponent(username)).get();\n  }\n\n  async refreshToken(): Promise<any> {\n    return BFast.auth().currentUser();\n  }\n\n  addUser(user: UserModel): Promise<UserModel> {\n    return new Promise<UserModel>(async (resolve, reject) => {\n      const shop = await this.storageService.getActiveShop();\n      const shops = user.shops ? user.shops : [];\n      const shops1 = shops.filter(value => value.applicationId !== shop.applicationId);\n      user.applicationId = shop.applicationId;\n      user.projectUrlId = shop.projectUrlId;\n      user.projectId = shop.projectId;\n      user.businessName = shop.businessName;\n      user.settings = shop.settings;\n      user.shops = shops1;\n      this.httpClient.post<UserModel>(this.settingsService.ssmFunctionsURL + '/functions/users/seller', user, {\n        headers: this.settingsService.ssmFunctionsHeader\n      }).subscribe(value => {\n        resolve(value);\n      }, error => {\n        reject(error);\n      });\n    });\n  }\n\n  async getShops(): Promise<ShopModel[]> {\n    try {\n      const user = await this.storageService.getActiveUser();\n      const shops = [];\n      user.shops.forEach(element => {\n        shops.push(element);\n      });\n      shops.push({\n        businessName: user.businessName,\n        projectId: user.projectId,\n        applicationId: user.applicationId,\n        projectUrlId: user.projectUrlId,\n        settings: user.settings,\n        street: user.street,\n        country: user.country,\n        region: user.region\n      });\n      return shops;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async getCurrentShop(): Promise<ShopModel> {\n    try {\n      const activeShop = await this.storageService.getActiveShop();\n      if (activeShop && activeShop.projectId && activeShop.applicationId && activeShop.projectUrlId) {\n        return activeShop;\n      } else {\n        throw new Error('No active shop in records');\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async saveCurrentShop(shop: ShopModel): Promise<ShopModel> {\n    try {\n      await this.storageService.saveCurrentProjectId(shop.projectId);\n      return await this.storageService.saveActiveShop(shop);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  createShop(data: { admin: UserModel, shop: ShopModel }): Promise<ShopModel> {\n    return undefined;\n    // return new Promise<ShopModel>(async (resolve, reject) => {\n    //   this.httpClient.post<ShopModel>(this.settings.ssmFunctionsURL + '/functions/shop', data, {\n    //     headers: this.settings.ssmFunctionsHeader\n    //   }).subscribe(value => {\n    //     resolve(value);\n    //   }, error => {\n    //     reject(error);\n    //   });\n    // });\n  }\n\n  deleteShop(shop: ShopModel): Promise<ShopModel> {\n    return undefined;\n    // return new Promise<ShopModel>((resolve, reject) => {\n    //   this.httpClient.delete(this.settings.ssmFunctionsURL + '/functions/shop', {\n    //   })\n    // });\n  }\n\n  updatePassword(user: UserModel, password: string): Promise<any> {\n    return new Promise<UserModel>((resolve, reject) => {\n      this.httpClient.put<any>(this.settingsService.ssmFunctionsURL + '/functions/users/password/' + user.id, {\n        password: password\n      }, {\n        headers: this.settingsService.ssmFunctionsHeader\n      }).subscribe(value => {\n        resolve(value);\n      }, error => {\n        reject(error);\n      });\n    });\n  }\n\n  updateUser(user: UserModel, data: { [p: string]: any }): Promise<UserModel> {\n    return new Promise(async (resolve, reject) => {\n      this.httpClient.put<UserModel>(this.settingsService.ssmFunctionsURL + '/functions/users/' + user.id, data, {\n        headers: this.settingsService.ssmFunctionsHeader\n      }).subscribe(value => resolve(value), error1 => {\n        reject(error1);\n      });\n    });\n  }\n\n  async updateCurrentUser(user: UserModel): Promise<UserModel> {\n    try {\n      return await this.storageService.saveActiveUser(user);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  changePasswordFromOld(data: { lastPassword: string; password: string; user: UserModel }): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.httpClient.put<UserModel>(this.settingsService.ssmFunctionsURL + '/functions/users/password/change/' + data.user.id, {\n        lastPassword: data.lastPassword,\n        username: data.user.username,\n        password: data.password\n      }, {\n        headers: this.settingsService.ssmFunctionsHeader\n      }).subscribe(value => resolve(value), error1 => {\n        reject(error1);\n      });\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ConfigsService{\n  static versionName = '';\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {EventService} from '../services/event.service';\nimport {UserService} from '../services/user.service';\nimport {LogService} from '../services/log.service';\nimport {SsmEvents} from '../utils/eventsNames.util';\nimport {ShopModel} from '../models/shop.model';\nimport {ConfigsService} from '../services/configs.service';\n\n@Component({\n  selector: 'smartstock-drawer',\n  template: `\n    <div class=\"my-side-nav\">\n      <div>\n        <div class=\"d-flex justify-content-center align-items-center flex-column\" style=\"padding-bottom: 8px\">\n          <div style=\"padding: 16px; justify-content: center; align-items: center\">\n            <mat-icon style=\"width: 70px; height: 70px; font-size: 70px\" color=\"primary\">store</mat-icon>\n          </div>\n          <span style=\"max-width: 150px; overflow: hidden; text-overflow: ellipsis;\"\n                *ngIf=\"shop\">{{shop.businessName}}</span>\n          <span style=\"width: 4px; height: 4px\"></span>\n          <button style=\"width: 80%\"\n                  color=\"primary\"\n                  class=\"btn-block\"\n                  routerLink=\"/account/shop\" mat-button>\n            Change Shop\n          </button>\n        </div>\n\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <mat-divider></mat-divider>\n        </div>\n\n        <mat-accordion [multi]=\"true\" class=\"mat-elevation-z0\">\n          <mat-nav-list *ngIf=\"isAdmin()\" class=\"mat-elevation-z0\">\n            <mat-list-item [ngStyle]=\"shouldExpand('dashboard')?selectedMenu:{}\" routerLink=\"/dashboard\">\n              <mat-icon matListIcon matPrefix>dashboard</mat-icon>\n              <span matLine style=\"margin-left: 8px\">Dashboard</span>\n            </mat-list-item>\n          </mat-nav-list>\n\n          <mat-divider *ngIf=\"isAdmin()\"></mat-divider>\n\n          <mat-expansion-panel *ngIf=\"isAdmin()\" [expanded]=\"shouldExpand('report')\" class=\"mat-elevation-z0\">\n            <mat-expansion-panel-header>\n              <mat-icon matPrefix>table_chart</mat-icon>\n              <span style=\"margin-left: 8px\">Reports</span>\n            </mat-expansion-panel-header>\n            <mat-nav-list>\n              <a mat-list-item routerLink=\"/report/sales\">Sales Reports</a>\n              <a mat-list-item routerLink=\"/report/stocks\">Stock Reports</a>\n            </mat-nav-list>\n          </mat-expansion-panel>\n\n          <mat-divider *ngIf=\"currentUser && currentUser.role==='admin'\"></mat-divider>\n\n          <mat-nav-list>\n            <mat-list-item [ngStyle]=\"shouldExpand('sale')?selectedMenu:{}\" routerLink=\"/sale\">\n              <mat-icon matListIcon matPrefix>shop_front</mat-icon>\n              <span matLine style=\"margin-left: 8px\">Sale</span>\n            </mat-list-item>\n          </mat-nav-list>\n\n          <mat-divider></mat-divider>\n\n          <mat-expansion-panel *ngIf=\"isManager()\" [expanded]=\"shouldExpand('purchase')\" class=\"mat-elevation-z0\">\n            <mat-expansion-panel-header>\n              <mat-icon matPrefix>receipts</mat-icon>\n              <span style=\"margin-left: 8px\">Purchase</span>\n            </mat-expansion-panel-header>\n            <mat-nav-list>\n              <a mat-list-item routerLink=\"/purchase\">All Purchases</a>\n              <a mat-list-item routerLink=\"/purchase/create\">New Purchase</a>\n              <a mat-list-item routerLink=\"/stock\" [queryParams]=\"{t:3}\">Suppliers</a>\n            </mat-nav-list>\n          </mat-expansion-panel>\n\n          <mat-divider *ngIf=\"currentUser && (currentUser.role==='admin' || currentUser.role === 'manager')\"></mat-divider>\n\n          <mat-nav-list *ngIf=\"isManager()\">\n            <mat-list-item [ngStyle]=\"shouldExpand('stock')?selectedMenu:{}\" routerLink=\"/stock\">\n              <mat-icon matListIcon matPrefix>store</mat-icon>\n              <span matLine style=\"margin-left: 8px\">Stock</span>\n            </mat-list-item>\n          </mat-nav-list>\n\n          <mat-divider *ngIf=\"isManager()\"></mat-divider>\n\n          <mat-expansion-panel [expanded]=\"shouldExpand('settings')\" class=\"mat-elevation-z0\">\n            <mat-expansion-panel-header>\n              <mat-icon matPrefix>supervisor_account</mat-icon>\n              <span style=\"margin-left: 8px\">Account</span>\n            </mat-expansion-panel-header>\n            <mat-nav-list>\n              <a *ngIf=\"isManager()\" mat-list-item\n                 routerLink=\"/account/settings\">\n                <div class=\"d-flex flex-row flex-nowrap btn-block\">\n                  <span>Settings</span>\n                  <span class=\"flex-grow-1\"></span>\n                  <mat-icon>settings</mat-icon>\n                </div>\n              </a>\n              <a *ngIf=\"isManager()\" mat-list-item\n                 routerLink=\"/account/users\">\n                <div class=\"d-flex flex-row flex-nowrap btn-block\">\n                  <span>Users</span>\n                  <span class=\"flex-grow-1\"></span>\n                  <mat-icon>person_add</mat-icon>\n                </div>\n              </a>\n              <a mat-list-item routerLink=\"/account/profile\">\n                <div class=\"d-flex flex-row flex-nowrap btn-block\">\n                  <span>Profile</span>\n                  <span class=\"flex-grow-1\"></span>\n                  <mat-icon>person</mat-icon>\n                </div>\n              </a>\n            </mat-nav-list>\n          </mat-expansion-panel>\n        </mat-accordion>\n\n      </div>\n      <span style=\"flex-grow: 1\"></span>\n      <div style=\"display: flex; justify-content: center; align-items: center\">\n        <span>Version: {{versionNumber | async}}</span>\n      </div>\n    </div>\n  `,\n  styleUrls: ['../styles/admin-drawer.style.scss']\n})\nexport class DrawerComponent implements OnInit {\n\n  constructor(private readonly userService: UserService,\n              private readonly logger: LogService,\n              private readonly eventApi: EventService) {\n  }\n\n  shop: ShopModel;\n  currentUser: any;\n  @Input() versionNumber: Observable<string> = of();\n  selectedMenu = {\n    background: '#1b5e20',\n    borderTopRightRadius: '50px',\n    borderBottomRightRadius: '50px',\n    color: 'white'\n  };\n\n  ngOnInit(): void {\n    this.versionNumber = of(ConfigsService.versionName);\n    this.userService.getCurrentShop().then(shop => {\n      this.shop = shop;\n    }).catch(reason => {\n      this.logger.i(reason);\n      this.shop = undefined;\n    });\n    this.userService.currentUser().then(user => {\n      this.currentUser = user;\n    });\n    this.eventApi.listen(SsmEvents.SETTINGS_UPDATED, data => {\n      this.userService.getCurrentShop().then(shop => {\n        this.shop = shop;\n      }).catch(reason => {\n        this.logger.e(reason, 'AdminDrawerComponent:37');\n        this.shop = undefined;\n      });\n    });\n  }\n\n  shouldExpand(route: string): boolean {\n    const url = new URL(location.href);\n    return url.pathname.startsWith('/' + route);\n  }\n\n  isManager(): boolean {\n    return this.currentUser && (this.currentUser.role === 'admin' || this.currentUser.role === 'manager');\n  }\n\n  isAdmin(): boolean {\n    return this.currentUser && (this.currentUser.role === 'admin');\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {StorageService} from '../services/storage.service';\nimport {UserService} from '../services/user.service';\nimport {UserModel} from '../models/user.model';\nimport {SsmEvents} from '../utils/eventsNames.util';\nimport {EventService} from '../services/event.service';\n\n@Component({\n  selector: 'smartstock-toolbar',\n  template: `\n    <mat-toolbar color=\"primary\" class=\"sticky-top mat-elevation-z4\">\n      <mat-toolbar-row>\n<!--        <button routerLink=\"{{backLink}}\" *ngIf=\"hasBackRoute && backLink\" mat-icon-button>-->\n<!--          <mat-icon>arrow_back</mat-icon>-->\n<!--        </button>-->\n        <button mat-icon-button (click)=\"sidenav.toggle()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <span>{{heading}}</span>\n        <span *ngIf=\"isMobile\" style=\"flex: 1 1 auto\"></span>\n        <span *ngIf=\"!isMobile && showSearch\" style=\"width: 16px\"></span>\n        <span *ngIf=\"!isMobile && !showSearch\" style=\"flex: 1 1 auto\"></span>\n        <smartstock-search-input [searchProgressFlag]=\"searchProgressFlag\"\n                          *ngIf=\"!isMobile && showSearch\" style=\"flex: 1 1 auto\"\n                          [showSearch]=\"showSearch\"\n                          [searchInputControl]=\"searchInputControl\"\n                          [searchPlaceholder]=\"searchPlaceholder\">\n        </smartstock-search-input>\n        <span *ngIf=\"!isMobile && showSearch\" style=\"width: 16px\"></span>\n        <button *ngIf=\"noOfProductsInCart> 0 && !isMobile\" mat-icon-button (click)=\"cartdrawer.toggle()\"\n                [matBadge]=\"noOfProductsInCart\">\n          <mat-icon>shopping_cart</mat-icon>\n        </button>\n        <button *ngIf=\"!isMobile\" class=\"ft-button\" mat-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>account_circle</mat-icon>\n          <span *ngIf=\"currentUser\">{{\"  \" + currentUser.username}}</span>\n        </button>\n        <button *ngIf=\"isMobile\" mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>more_vert</mat-icon>\n          <!--      <span *ngIf=\"currentUser\">{{\"  \" + currentUser.username}}</span>-->\n        </button>\n        <mat-menu #menu>\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>exit_to_app</mat-icon>\n            Logout\n          </button>\n          <button mat-menu-item routerLink=\"/account/profile\">\n            <mat-icon>person</mat-icon>\n            My Profile\n          </button>\n        </mat-menu>\n      </mat-toolbar-row>\n\n      <mat-toolbar-row *ngIf=\"isMobile && showSearch\">\n        <!--    <span style=\"flex-grow: 1\"></span>-->\n        <smartstock-search-input [searchProgressFlag]=\"searchProgressFlag\"\n                          style=\"flex: 1 1 auto\"\n                          [showSearch]=\"showSearch\"\n                          [searchInputControl]=\"searchInputControl\"\n                          [searchPlaceholder]=\"searchPlaceholder\">\n        </smartstock-search-input>\n        <!--    <span style=\"flex-grow: 1\"></span>-->\n      </mat-toolbar-row>\n    </mat-toolbar>\n  `,\n})\nexport class ToolbarComponent implements OnInit {\n  @Input() heading: string;\n  @Input() showProgress = false;\n  @Input() sidenav: MatSidenav;\n  @Input() hasBackRoute = false;\n  @Input() backLink: string;\n  @Input() cartdrawer: MatSidenav;\n  @Input() showSearch = false;\n  @Output() searchCallback = new EventEmitter<string>();\n  @Input() searchInputControl = new FormControl('');\n  @Input() searchPlaceholder: string | 'Type to search';\n  currentUser: UserModel;\n\n  noOfProductsInCart;\n  @Input() searchProgressFlag = false;\n  isMobile = false; // environment.android;\n\n  constructor(private readonly router: Router,\n              private readonly storage: StorageService,\n              private readonly userDatabase: UserService,\n              private readonly eventService: EventService) {\n  }\n\n  ngOnInit(): void {\n    this.storage.getActiveUser().then(user => {\n      this.currentUser = user;\n    });\n    this.searchInputControl.valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe(_ => {\n      this.searchCallback.emit(this.searchInputControl.value);\n    });\n\n    this.getProductsInCart();\n    this._clearSearchInputListener();\n  }\n\n  getProductsInCart(): void {\n    this.eventService.listen(SsmEvents.NO_OF_CART, (data) => {\n      this.noOfProductsInCart = data.detail;\n    });\n  }\n\n  logout(): void {\n    this.userDatabase.logout(null).finally(() => {\n      return this.router.navigateByUrl('');\n    }).catch(err => console.log(''));\n  }\n\n  private _clearSearchInputListener(): void {\n    // this.eventService.listen(SsmEvents.ADD_CART, data => {\n    //   this.searchInputControl.reset('');\n    // });\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'smartstock-no-stock-dialog',\n  template: `\n    <div>\n      <h5>Hello!</h5>\n      <mat-card-subtitle mat-dialog-content>\n        StockModel is not available yet, add product or refresh your stock\n      </mat-card-subtitle>\n      <div mat-dialog-actions>\n        <button (click)=\"dialogRef.close()\" routerLink=\"/stock\" mat-flat-button color=\"primary\">Go To StockModel</button>\n        <button (click)=\"dialogRef.close()\" mat-flat-button color=\"warn\">Close</button>\n      </div>\n    </div>\n  `,\n})\nexport class NoStockDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<NoStockDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {UserService} from '../services/user.service';\nimport {ShopModel} from '../models/shop.model';\n\n@Pipe({\n  name: 'shopsPipe'\n})\nexport class ShopsPipe implements PipeTransform {\n\n  constructor(private readonly userApi: UserService) {\n  }\n\n  async transform(shops: ShopModel[], ...args: unknown[]): Promise<string[]> {\n    try {\n      const shop = await this.userApi.getCurrentShop();\n      shops.push(shop);\n      return shops.map(value => value.businessName);\n    } catch (e) {\n      return [];\n    }\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'smartstock-on-fetch',\n  template: `\n    <div *ngIf=\"!isLoading\" class=\"no-data-wrapper\">\n      <img src=\"/src/assets/img/empty.svg\" width=\"200px\" alt=\"\">\n      <h4>No Data</h4>\n      <button (click)=\"callBack()\" matTooltip=\"Click to refresh\" mat-raised-button mat-icon-button>\n        <mat-icon color=\"accent\">\n          refresh\n        </mat-icon>\n      </button>\n    </div>\n\n    <div *ngIf=\"isLoading\" class=\"no-data-wrapper\">\n      <img src=\"/src/assets/img/data.svg\" width=\"200px\" alt=\"\">\n      <h4>Fetching data...</h4>\n      <mat-progress-spinner color=\"accent\" mode=\"indeterminate\" [diameter]=\"30\"></mat-progress-spinner>\n    </div>\n  `,\n  styleUrls: ['../styles/on-fetch.style.scss']\n})\nexport class OnFetchComponent implements OnInit {\n\n  @Output() refreshCallback = new EventEmitter();\n  @Input() isLoading: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  callBack() {\n    this.refreshCallback.emit();\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'smartstock-search-input',\n  template: `\n    <div style=\"width: 100%\">\n      <input [formControl]=\"searchInputControl\"\n             *ngIf=\"showSearch\"\n             class=\"toolbar-input\" type=\"text\" placeholder=\"{{searchPlaceholder}}\">\n      <mat-progress-spinner style=\"display: inline-block; margin-left: -30px\"\n                            mode=\"indeterminate\" diameter=\"25\"\n                            color=\"primary\"\n                            *ngIf=\"showSearch && searchProgressFlag\"\n                            matSuffix>\n        <!--      <mat-icon>search</mat-icon>-->\n      </mat-progress-spinner>\n    </div>\n  `,\n  styleUrls: ['../styles/search-input.style.scss']\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() searchInputControl: FormControl;\n  @Input() showSearch = false;\n  @Input() searchProgressFlag = false;\n  @Input() searchPlaceholder = 'Enter something...';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'smartstock-bottom-bar',\n  template: `\n    <mat-toolbar class=\"fixed-bottom bottom-smartstock-bar\">\n\n      <div class=\"flex-grow-1 d-flex justify-content-center align-items-center flex-column\">\n        <button mat-icon-button *ngIf=\"activeNav('dashboard')\" mat-flat-button routerLink=\"/dashboard\">\n          <mat-icon color=\"{{activeNav('dashboard')?'primary':''}}\">dashboard</mat-icon>\n        </button>\n        <button *ngIf=\"!activeNav('dashboard')\" mat-icon-button routerLink=\"/dashboard\">\n          <mat-icon>dashboard</mat-icon>\n        </button>\n        <!--    <span *ngIf=\"activeNav('dashboard')\">Dashboard</span>-->\n      </div>\n\n      <div class=\"flex-grow-1 d-flex justify-content-center align-items-center flex-column\">\n        <button mat-icon-button *ngIf=\"activeNav('sale')\" mat-flat-button routerLink=\"/sale\">\n          <mat-icon color=\"{{activeNav('sale')?'primary':''}}\">shop</mat-icon>\n        </button>\n        <button *ngIf=\"!activeNav('sale')\" mat-icon-button routerLink=\"/sale\">\n          <mat-icon>shop</mat-icon>\n        </button>\n        <!--    <span *ngIf=\"activeNav('sale')\">Sale</span>-->\n      </div>\n\n      <div class=\"flex-grow-1 d-flex justify-content-center align-items-center flex-column\">\n        <button mat-icon-button *ngIf=\"activeNav('purchase')\" mat-flat-button routerLink=\"/purchase\">\n          <mat-icon color=\"{{activeNav('purchase')?'primary':''}}\">receipt</mat-icon>\n        </button>\n        <button *ngIf=\"!activeNav('purchase')\" mat-icon-button routerLink=\"/purchase\">\n          <mat-icon>receipt</mat-icon>\n        </button>\n        <!--    <span *ngIf=\"activeNav('purchase')\">Purchase</span>-->\n      </div>\n\n      <div class=\"flex-grow-1 d-flex justify-content-center align-items-center flex-column\">\n        <button mat-icon-button *ngIf=\"activeNav('stock')\" mat-flat-button routerLink=\"/stock\">\n          <mat-icon color=\"{{activeNav('stock')?'primary':''}}\">store</mat-icon>\n        </button>\n        <button *ngIf=\"!activeNav('stock')\" mat-icon-button routerLink=\"/stock\">\n          <mat-icon>store</mat-icon>\n        </button>\n        <!--    <span *ngIf=\"activeNav('stock')\">StockModel</span>-->\n      </div>\n\n      <div class=\"flex-grow-1 d-flex justify-content-center align-items-center flex-column\">\n        <button mat-icon-button *ngIf=\"activeNav('settings')\" mat-flat-button routerLink=\"/account\">\n          <mat-icon color=\"{{activeNav('settings')?'primary':''}}\">settings</mat-icon>\n        </button>\n        <button *ngIf=\"!activeNav('settings')\" mat-icon-button routerLink=\"/account\">\n          <mat-icon>settings</mat-icon>\n        </button>\n        <!--    <span *ngIf=\"activeNav('settings')\">Settings</span>-->\n      </div>\n\n    </mat-toolbar>\n  `,\n  styleUrls: ['../styles/bottom-bar.style.scss']\n})\nexport class BottomBarComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  activeNav(route: string): boolean {\n    const url = new URL(location.href);\n    return url.pathname.startsWith('/' + route);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'smartstock-data-not-ready',\n  template: `\n    <div *ngIf=\"!isLoading\" style=\"margin-top: 10px; margin-bottom: 10px\"\n         class=\"d-flex flex-column justify-content-center align-items-center\">\n      <img alt=\"no data\" src=\"../../../../assets/img/data.svg\" width=\"{{width}}\" height=\"{{height}}\"/>\n      <span>Data is not ready yet</span>\n    </div>\n    <div *ngIf=\"isLoading\" style=\"width: 100%; height: 100%; display: flex; justify-content: center; align-items: center\">\n      <mat-progress-spinner mode=\"indeterminate\" [diameter]=\"30\"></mat-progress-spinner>\n    </div>\n  `,\n})\nexport class DataNotReadyComponent implements OnInit {\n  @Input() width = 200;\n  @Input() height = 200;\n  @Input() isLoading = false;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'smartstock-upload-files',\n  template: `\n    <div style=\"display: flex; flex-direction: row; flex-wrap: wrap; align-items: center; padding: 8px\">\n      <div *ngFor=\"let file of files; let i =index\"\n           style=\"display: flex; flex-direction: row; flex-wrap: nowrap; align-items: center\">\n        <mat-card style=\"height: 50px; margin: 5px; display: flex; flex-direction: row; align-items: center\">\n          <span style=\"max-width: 200px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis\">\n            {{file.name}}\n          </span>\n          <span style=\"width: 10px\"></span>\n          <button mat-icon-button style=\"display: inline-block\" (click)=\"removeFile($event, i)\">\n            <mat-icon color=\"warn\">delete</mat-icon>\n          </button>\n        </mat-card>\n      </div>\n      <mat-card (click)=\"uploadFile.click()\" matRipple style=\"width: 120px; height: 50px; margin: 5px\">\n        <mat-icon>attachment</mat-icon>\n        <span>Add File</span>\n      </mat-card>\n    </div>\n\n    <input style=\"display: none\" #uploadFile [multiple]=\"false\" type=\"file\" (change)=\"uploadFiles($event,uploadFile)\">\n  `,\n})\nexport class UploadFilesComponent implements OnInit {\n  @Input() files: { name: string, type: string, url: File }[] = [];\n  @Input() uploadFileFormControl: FormControl = new FormControl([], [Validators.nullValidator, Validators.required]);\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  removeFile($event: MouseEvent, i: number) {\n    $event.preventDefault();\n    this.files.splice(i, 1);\n  }\n\n  async uploadFiles($event: Event, uploadFile: HTMLInputElement) {\n    const files: FileList = $event.target['files'];\n    if (files.item(0)) {\n      const file: File = files.item(0);\n      if (this.files.length === 0) {\n        this.files.push({\n          name: file.name,\n          type: file.type,\n          url: file,\n        });\n      } else {\n        this.files = this.files.filter(value => file.name !== value.name);\n        this.files.push({\n          name: file.name,\n          type: file.type,\n          url: file\n        });\n      }\n      this.uploadFileFormControl.setValue(this.files);\n      uploadFile.value = '';\n    }\n  }\n\n  // private async readFileContent(file: File): Promise<string> {\n  //   return new Promise((resolve, reject) => {\n  //     const fileReader = new FileReader();\n  //     fileReader.onload = ev => {\n  //       resolve(ev.target.result.toString());\n  //     };\n  //     fileReader.onerror = _ => {\n  //       reject('Fails to read file');\n  //     };\n  //     fileReader.readAsDataURL(file);\n  //   });\n  // }\n\n}\n","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'smartstock-dash-card',\n  template: `\n    <mat-card class=\"d-flex flex-column\" [ngStyle]=\"{height:height+'px'}\">\n      <mat-card-header style=\"margin: 0\">\n        <span>{{title}}</span>\n        <span style=\"margin-left: 8px\"></span>\n        <mat-icon matTooltip=\"{{description}}\">info_outline</mat-icon>\n      </mat-card-header>\n      <mat-card-content class=\"flex-grow-1\">\n        <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n      </mat-card-content>\n      <hr *ngIf=\"reportLink\" style=\"width: 100%; margin: 0; padding: 0\">\n      <mat-card-actions *ngIf=\"reportLink\" class=\"d-flex flex-row\">\n        <span style=\"flex: 1 1 auto\"></span>\n        <button (click)=\"goTo()\"color=\"primary\" mat-button>\n          EXPLORE REPORT\n          <mat-icon matSuffix>arrow_forward</mat-icon>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  `,\n})\nexport class DashCardComponent implements OnInit {\n  @Input() title = '';\n  @Input() height = 300;\n  @Input() description = '';\n  @Input() reportLink: string;\n  @Input() content: TemplateRef<any>;\n\n  constructor(private readonly router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  goTo() {\n    if (this.reportLink) {\n      this.router.navigateByUrl(this.reportLink).catch(console.log);\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'smartstock-upload-file-progress',\n  template: `\n    <div *ngIf=\"onUploadFlag\">\n      <mat-progress-bar [bufferValue]=\"100\" mode=\"determinate\" [value]=\"uploadPercentage\"></mat-progress-bar>\n      <span>{{name}} {{uploadPercentage}}%</span>\n    </div>\n  `,\n})\nexport class UploadFileProgressComponent implements OnInit {\n  @Input() name = '';\n  @Input() onUploadFlag = false;\n  @Input() uploadPercentage = 0;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import {StockModel} from '../models/stock.model';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\n\n@Component({\n  selector: 'smartstock-lisb-dialog-delete',\n  template: `\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <mat-panel-title class=\"text-center\">\n            Your about to delete :  <b>{{' '+ data.product}}</b>\n          </mat-panel-title>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center\">\n        <div class=\"align-self-center\" style=\"margin: 8px\">\n          <button color=\"primary\"  mat-button (click)=\"delete(data)\">Delete</button>\n        </div>\n        <div class=\"alert-secondary\" style=\"margin: 8px\">\n          <button color=\"primary\" mat-button (click)=\"cancel()\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class DialogDeleteComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DialogDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: StockModel) {\n  }\n\n  delete(stock: StockModel): any {\n    this.dialogRef.close(stock);\n  }\n\n  cancel(): any {\n    this.dialogRef.close('no');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {DrawerComponent} from './components/drawer.component';\nimport {ToolbarComponent} from './components/toolbar.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {RouterModule} from '@angular/router';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {NoStockDialogComponent} from './components/no-stock-dialog.component';\nimport {ShopsPipe} from './pipes/shops.pipe';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {OnFetchComponent} from './components/on-fetch.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {SearchInputComponent} from './components/search-input.component';\nimport {BottomBarComponent} from './components/bottom-bar.component';\nimport {DataNotReadyComponent} from './components/data-not-ready.component';\nimport {UploadFilesComponent} from './components/upload-files.component';\nimport {MatRippleModule} from '@angular/material/core';\nimport {DashCardComponent} from './components/dash-card.component';\nimport {CommonModule} from '@angular/common';\nimport {UploadFileProgressComponent} from './components/upload-file-progress.component';\nimport {VerifyEMailDialogComponent} from './components/verify-email-dialog.component';\nimport {DialogDeleteComponent} from './components/delete-dialog.component';\nimport {ConfigsService} from './services/configs.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    RouterModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRippleModule\n  ],\n  exports: [\n    DrawerComponent,\n    ToolbarComponent,\n    ShopsPipe,\n    OnFetchComponent,\n    BottomBarComponent,\n    DataNotReadyComponent,\n    UploadFilesComponent,\n    DashCardComponent,\n    UploadFileProgressComponent\n  ],\n  declarations: [\n    DrawerComponent,\n    ToolbarComponent,\n    NoStockDialogComponent,\n    ShopsPipe,\n    OnFetchComponent,\n    SearchInputComponent,\n    BottomBarComponent,\n    DataNotReadyComponent,\n    UploadFilesComponent,\n    DashCardComponent,\n    DialogDeleteComponent,\n    UploadFileProgressComponent,\n    VerifyEMailDialogComponent\n  ]\n})\n\nexport class LibModule {\n  static start(config: { version: string } = {version: ''}): void {\n    ConfigsService.versionName = config.version;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BFast} from 'bfastjs';\nimport {StorageService} from './storage.service';\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class FileLibraryService {\n  constructor(private readonly storageService: StorageService) {\n  }\n\n  async saveFile(file: any, progress: (percentage: number) => void): Promise<string> {\n    if (file && file instanceof File) {\n      const activeShop = await this.storageService.getActiveShop();\n      return BFast.storage(activeShop?.projectId).save(file, (data) => {\n        progress((Number(data.loaded) / Number(data.total) * 100));\n      });\n    } else if (file && typeof file === 'string' && file.startsWith('http')) {\n      return file;\n    } else {\n      return null;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private readonly matSnackBar: MatSnackBar) {\n  }\n\n  showMobileInfoMessage(message: string, duration: number = 3000, position: 'bottom' | 'top' = 'top'): void {\n    this.matSnackBar.open(message, 'Ok', {\n      horizontalPosition: 'center',\n      verticalPosition: position,\n      duration\n    });\n  }\n}\n","import {MatSidenav} from '@angular/material/sidenav';\n\nexport abstract class DeviceInfoUtil {\n  getWidth(): number {\n    return window.innerWidth;\n  }\n\n  enoughWidth(): boolean {\n    const width = this.getWidth();\n    return width > 1000;\n  }\n\n  openDrawer(sidenav: MatSidenav) {\n    sidenav.open().catch();\n  }\n}\n","export const toSqlDate = (date: Date) => {\n  const year = date.getFullYear();\n  let month = (date.getMonth() + 1).toString(10);\n  let day = (date.getDate()).toString(10);\n  if (month.length === 1) {\n    month = '0' + month;\n  }\n  if (day.length === 1) {\n    day = '0' + day;\n  }\n  return year + '-' + month + '-' + day;\n};\n"]}